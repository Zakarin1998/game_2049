{
	"id": "1e6d288643aa13e81a5f29c1a2c9257f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GameContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract GameContract is Ownable(0x50DD541ad540d046E5822a1D5440060D58776eA6) {\n    using SafeERC20 for IERC20;\n    // CZ4 : https://cz4png.vercel.app | https://t.me/cz4png\n    // CZ2049 (FASU) : https://dexscreener.com/ethereum/0x64d52885d4a37926E1f299A9ab248900248933A6\n\n    IERC20 public cz4Token; \n    IERC20 public fasuToken;\n    // Total prize amount in CZ4\n    uint public prizeAmount;\n    // Events\n    event PrizeAdded(uint amount);\n    event FASUDeposited(address indexed user, uint fasuAmount, uint cz4Reward);\n\n    constructor(address _cz4TokenAddress, address _fasuTokenAddress) \n    {\n        cz4Token = IERC20(_cz4TokenAddress);\n        fasuToken = IERC20(_fasuTokenAddress);\n    }\n    // Admin function to add CZ4 to the prize pool\n    function addPrize(uint amount) external onlyOwner {\n        require(amount > 0, \"Prize amount must be greater than zero\");\n        cz4Token.safeTransferFrom(msg.sender, address(this), amount);\n        prizeAmount += amount;\n\n        emit PrizeAdded(amount);\n    }\n\n\n    function depositFASU(uint fasuAmount) external {\n        // Depesosits FASU and withdraws\n        require(fasuAmount > 0, \"Deposit amount must be greater than zero\");\n        require(prizeAmount > 0, \"Prize pool is empty\");\n\n        fasuToken.safeTransferFrom(msg.sender, address(this), fasuAmount);\n        \n        uint randomFactor = (uint(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % 5) + 1;\n        uint cz4Reward = (fasuAmount / 1_000_000) * randomFactor;\n\n        require(cz4Reward <= prizeAmount, \"Not enough CZ4 in prize pool\");\n        prizeAmount -= cz4Reward;\n\n        cz4Token.safeTransfer(msg.sender, cz4Reward);\n\n        emit FASUDeposited(msg.sender, fasuAmount, cz4Reward);\n    }\n\n    // Admin function to withdraw all funds (ETH and tokens)\n    function withdrawFunds() external onlyOwner {\n        uint ethBalance = address(this).balance;\n        uint cz4Balance = cz4Token.balanceOf(address(this));\n        uint fasuBalance = fasuToken.balanceOf(address(this));\n        // Withdraw ETH if any\n        if (ethBalance > 0) {\n            payable(owner()).transfer(ethBalance);\n        }\n        // Withdraw CZ4 tokens if any\n        if (cz4Balance > 0) {\n            cz4Token.safeTransfer(owner(), cz4Balance);\n        }\n        // Withdraw FASU tokens if any\n        if (fasuBalance > 0) {\n            fasuToken.safeTransfer(owner(), fasuBalance);\n        }\n    }\n    // Allow contract to receive ETH\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GameContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GameContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GameContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GameContract.sol": {
				"GameContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cz4TokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_fasuTokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fasuAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cz4Reward",
									"type": "uint256"
								}
							],
							"name": "FASUDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "PrizeAdded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addPrize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cz4Token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "fasuAmount",
									"type": "uint256"
								}
							],
							"name": "depositFASU",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fasuToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "prizeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GameContract.sol\":234:2742  contract GameContract is Ownable(0x50DD541ad540d046E5822a1D5440060D58776eA6) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GameContract.sol\":760:929  constructor(address _cz4TokenAddress, address _fasuTokenAddress) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/GameContract.sol\":267:309  0x50DD541ad540d046E5822a1D5440060D58776eA6 */\n  0x50dd541ad540d046e5822a1d5440060d58776ea6\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/GameContract.sol\":858:874  _cz4TokenAddress */\n  dup2\n    /* \"contracts/GameContract.sol\":840:848  cz4Token */\n  0x01\n  0x00\n    /* \"contracts/GameContract.sol\":840:875  cz4Token = IERC20(_cz4TokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GameContract.sol\":904:921  _fasuTokenAddress */\n  dup1\n    /* \"contracts/GameContract.sol\":885:894  fasuToken */\n  0x02\n  0x00\n    /* \"contracts/GameContract.sol\":885:922  fasuToken = IERC20(_fasuTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GameContract.sol\":760:929  constructor(address _cz4TokenAddress, address _fasuTokenAddress) ... */\n  pop\n  pop\n    /* \"contracts/GameContract.sol\":234:2742  contract GameContract is Ownable(0x50DD541ad540d046E5822a1D5440060D58776eA6) {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/GameContract.sol\":234:2742  contract GameContract is Ownable(0x50DD541ad540d046E5822a1D5440060D58776eA6) {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GameContract.sol\":234:2742  contract GameContract is Ownable(0x50DD541ad540d046E5822a1D5440060D58776eA6) {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x785fa627\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x79d4964f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x1e1a6e6e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24600fc3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2a050024\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x44a88070\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/GameContract.sol\":510:532  IERC20 public cz4Token */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameContract.sol\":2051:2669  function withdrawFunds() external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/GameContract.sol\":985:1248  function addPrize(uint amount) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/GameContract.sol\":539:562  IERC20 public fasuToken */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/GameContract.sol\":601:624  uint public prizeAmount */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GameContract.sol\":1255:1984  function depositFASU(uint fasuAmount) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/GameContract.sol\":510:532  IERC20 public cz4Token */\n    tag_17:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GameContract.sol\":2051:2669  function withdrawFunds() external onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/GameContract.sol\":2105:2120  uint ethBalance */\n      0x00\n        /* \"contracts/GameContract.sol\":2123:2144  address(this).balance */\n      selfbalance\n        /* \"contracts/GameContract.sol\":2105:2144  uint ethBalance = address(this).balance */\n      swap1\n      pop\n        /* \"contracts/GameContract.sol\":2154:2169  uint cz4Balance */\n      0x00\n        /* \"contracts/GameContract.sol\":2172:2180  cz4Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":2172:2190  cz4Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/GameContract.sol\":2199:2203  this */\n      address\n        /* \"contracts/GameContract.sol\":2172:2205  cz4Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/GameContract.sol\":2154:2205  uint cz4Balance = cz4Token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/GameContract.sol\":2215:2231  uint fasuBalance */\n      0x00\n        /* \"contracts/GameContract.sol\":2234:2243  fasuToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":2234:2253  fasuToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/GameContract.sol\":2262:2266  this */\n      address\n        /* \"contracts/GameContract.sol\":2234:2268  fasuToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_66:\n        /* \"contracts/GameContract.sol\":2215:2268  uint fasuBalance = fasuToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/GameContract.sol\":2326:2327  0 */\n      0x00\n        /* \"contracts/GameContract.sol\":2313:2323  ethBalance */\n      dup4\n        /* \"contracts/GameContract.sol\":2313:2327  ethBalance > 0 */\n      gt\n        /* \"contracts/GameContract.sol\":2309:2391  if (ethBalance > 0) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/GameContract.sol\":2351:2358  owner() */\n      tag_68\n        /* \"contracts/GameContract.sol\":2351:2356  owner */\n      tag_46\n        /* \"contracts/GameContract.sol\":2351:2358  owner() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/GameContract.sol\":2343:2368  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":2343:2380  payable(owner()).transfer(ethBalance) */\n      0x08fc\n        /* \"contracts/GameContract.sol\":2369:2379  ethBalance */\n      dup5\n        /* \"contracts/GameContract.sol\":2343:2380  payable(owner()).transfer(ethBalance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n        /* \"contracts/GameContract.sol\":2309:2391  if (ethBalance > 0) {... */\n    tag_67:\n        /* \"contracts/GameContract.sol\":2455:2456  0 */\n      0x00\n        /* \"contracts/GameContract.sol\":2442:2452  cz4Balance */\n      dup3\n        /* \"contracts/GameContract.sol\":2442:2456  cz4Balance > 0 */\n      gt\n        /* \"contracts/GameContract.sol\":2438:2525  if (cz4Balance > 0) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"contracts/GameContract.sol\":2472:2514  cz4Token.safeTransfer(owner(), cz4Balance) */\n      tag_72\n        /* \"contracts/GameContract.sol\":2494:2501  owner() */\n      tag_73\n        /* \"contracts/GameContract.sol\":2494:2499  owner */\n      tag_46\n        /* \"contracts/GameContract.sol\":2494:2501  owner() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/GameContract.sol\":2503:2513  cz4Balance */\n      dup4\n        /* \"contracts/GameContract.sol\":2472:2480  cz4Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":2472:2493  cz4Token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_74\n      swap1\n        /* \"contracts/GameContract.sol\":2472:2514  cz4Token.safeTransfer(owner(), cz4Balance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"contracts/GameContract.sol\":2438:2525  if (cz4Balance > 0) {... */\n    tag_71:\n        /* \"contracts/GameContract.sol\":2591:2592  0 */\n      0x00\n        /* \"contracts/GameContract.sol\":2577:2588  fasuBalance */\n      dup2\n        /* \"contracts/GameContract.sol\":2577:2592  fasuBalance > 0 */\n      gt\n        /* \"contracts/GameContract.sol\":2573:2663  if (fasuBalance > 0) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/GameContract.sol\":2608:2652  fasuToken.safeTransfer(owner(), fasuBalance) */\n      tag_76\n        /* \"contracts/GameContract.sol\":2631:2638  owner() */\n      tag_77\n        /* \"contracts/GameContract.sol\":2631:2636  owner */\n      tag_46\n        /* \"contracts/GameContract.sol\":2631:2638  owner() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/GameContract.sol\":2640:2651  fasuBalance */\n      dup3\n        /* \"contracts/GameContract.sol\":2608:2617  fasuToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":2608:2630  fasuToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_74\n      swap1\n        /* \"contracts/GameContract.sol\":2608:2652  fasuToken.safeTransfer(owner(), fasuBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"contracts/GameContract.sol\":2573:2663  if (fasuBalance > 0) {... */\n    tag_75:\n        /* \"contracts/GameContract.sol\":2095:2669  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/GameContract.sol\":2051:2669  function withdrawFunds() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GameContract.sol\":985:1248  function addPrize(uint amount) external onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_79\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/GameContract.sol\":1062:1063  0 */\n      0x00\n        /* \"contracts/GameContract.sol\":1053:1059  amount */\n      dup2\n        /* \"contracts/GameContract.sol\":1053:1063  amount > 0 */\n      gt\n        /* \"contracts/GameContract.sol\":1045:1106  require(amount > 0, \"Prize amount must be greater than zero\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/GameContract.sol\":1116:1176  cz4Token.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_84\n        /* \"contracts/GameContract.sol\":1142:1152  msg.sender */\n      caller\n        /* \"contracts/GameContract.sol\":1162:1166  this */\n      address\n        /* \"contracts/GameContract.sol\":1169:1175  amount */\n      dup4\n        /* \"contracts/GameContract.sol\":1116:1124  cz4Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":1116:1141  cz4Token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_85\n      swap1\n        /* \"contracts/GameContract.sol\":1116:1176  cz4Token.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"contracts/GameContract.sol\":1201:1207  amount */\n      dup1\n        /* \"contracts/GameContract.sol\":1186:1197  prizeAmount */\n      0x03\n      0x00\n        /* \"contracts/GameContract.sol\":1186:1207  prizeAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GameContract.sol\":1223:1241  PrizeAdded(amount) */\n      0x7e4809669d29d4f60fc52cdc899ff62c77b16c6a3893532c483386afa590a271\n        /* \"contracts/GameContract.sol\":1234:1240  amount */\n      dup2\n        /* \"contracts/GameContract.sol\":1223:1241  PrizeAdded(amount) */\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/GameContract.sol\":985:1248  function addPrize(uint amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/GameContract.sol\":539:562  IERC20 public fasuToken */\n    tag_30:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GameContract.sol\":601:624  uint public prizeAmount */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/GameContract.sol\":1255:1984  function depositFASU(uint fasuAmount) external {... */\n    tag_43:\n        /* \"contracts/GameContract.sol\":1374:1375  0 */\n      0x00\n        /* \"contracts/GameContract.sol\":1361:1371  fasuAmount */\n      dup2\n        /* \"contracts/GameContract.sol\":1361:1375  fasuAmount > 0 */\n      gt\n        /* \"contracts/GameContract.sol\":1353:1420  require(fasuAmount > 0, \"Deposit amount must be greater than zero\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/GameContract.sol\":1452:1453  0 */\n      0x00\n        /* \"contracts/GameContract.sol\":1438:1449  prizeAmount */\n      sload(0x03)\n        /* \"contracts/GameContract.sol\":1438:1453  prizeAmount > 0 */\n      gt\n        /* \"contracts/GameContract.sol\":1430:1477  require(prizeAmount > 0, \"Prize pool is empty\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/GameContract.sol\":1488:1553  fasuToken.safeTransferFrom(msg.sender, address(this), fasuAmount) */\n      tag_101\n        /* \"contracts/GameContract.sol\":1515:1525  msg.sender */\n      caller\n        /* \"contracts/GameContract.sol\":1535:1539  this */\n      address\n        /* \"contracts/GameContract.sol\":1542:1552  fasuAmount */\n      dup4\n        /* \"contracts/GameContract.sol\":1488:1497  fasuToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":1488:1514  fasuToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_85\n      swap1\n        /* \"contracts/GameContract.sol\":1488:1553  fasuToken.safeTransferFrom(msg.sender, address(this), fasuAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/GameContract.sol\":1572:1589  uint randomFactor */\n      0x00\n        /* \"contracts/GameContract.sol\":1681:1682  1 */\n      0x01\n        /* \"contracts/GameContract.sol\":1676:1677  5 */\n      0x05\n        /* \"contracts/GameContract.sol\":1625:1640  block.timestamp */\n      timestamp\n        /* \"contracts/GameContract.sol\":1642:1658  block.prevrandao */\n      prevrandao\n        /* \"contracts/GameContract.sol\":1660:1670  msg.sender */\n      caller\n        /* \"contracts/GameContract.sol\":1608:1671  abi.encodePacked(block.timestamp, block.prevrandao, msg.sender) */\n      add(0x20, mload(0x40))\n      tag_102\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/GameContract.sol\":1598:1672  keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/GameContract.sol\":1593:1673  uint(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) */\n      0x00\n      shr\n        /* \"contracts/GameContract.sol\":1593:1677  uint(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % 5 */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/GameContract.sol\":1592:1682  (uint(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % 5) + 1 */\n      tag_106\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_106:\n        /* \"contracts/GameContract.sol\":1572:1682  uint randomFactor = (uint(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, msg.sender))) % 5) + 1 */\n      swap1\n      pop\n        /* \"contracts/GameContract.sol\":1692:1706  uint cz4Reward */\n      0x00\n        /* \"contracts/GameContract.sol\":1736:1748  randomFactor */\n      dup2\n        /* \"contracts/GameContract.sol\":1723:1732  1_000_000 */\n      0x0f4240\n        /* \"contracts/GameContract.sol\":1710:1720  fasuAmount */\n      dup5\n        /* \"contracts/GameContract.sol\":1710:1732  fasuAmount / 1_000_000 */\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"contracts/GameContract.sol\":1709:1748  (fasuAmount / 1_000_000) * randomFactor */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/GameContract.sol\":1692:1748  uint cz4Reward = (fasuAmount / 1_000_000) * randomFactor */\n      swap1\n      pop\n        /* \"contracts/GameContract.sol\":1780:1791  prizeAmount */\n      sload(0x03)\n        /* \"contracts/GameContract.sol\":1767:1776  cz4Reward */\n      dup2\n        /* \"contracts/GameContract.sol\":1767:1791  cz4Reward <= prizeAmount */\n      gt\n      iszero\n        /* \"contracts/GameContract.sol\":1759:1824  require(cz4Reward <= prizeAmount, \"Not enough CZ4 in prize pool\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/GameContract.sol\":1849:1858  cz4Reward */\n      dup1\n        /* \"contracts/GameContract.sol\":1834:1845  prizeAmount */\n      0x03\n      0x00\n        /* \"contracts/GameContract.sol\":1834:1858  prizeAmount -= cz4Reward */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GameContract.sol\":1869:1913  cz4Token.safeTransfer(msg.sender, cz4Reward) */\n      tag_116\n        /* \"contracts/GameContract.sol\":1891:1901  msg.sender */\n      caller\n        /* \"contracts/GameContract.sol\":1903:1912  cz4Reward */\n      dup3\n        /* \"contracts/GameContract.sol\":1869:1877  cz4Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GameContract.sol\":1869:1890  cz4Token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_74\n      swap1\n        /* \"contracts/GameContract.sol\":1869:1913  cz4Token.safeTransfer(msg.sender, cz4Reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/GameContract.sol\":1943:1953  msg.sender */\n      caller\n        /* \"contracts/GameContract.sol\":1929:1977  FASUDeposited(msg.sender, fasuAmount, cz4Reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6dd63c9a34674245c3658d149ff4d640423eb11008c777a57783c3237d96ffcf\n        /* \"contracts/GameContract.sol\":1955:1965  fasuAmount */\n      dup5\n        /* \"contracts/GameContract.sol\":1967:1976  cz4Reward */\n      dup4\n        /* \"contracts/GameContract.sol\":1929:1977  FASUDeposited(msg.sender, fasuAmount, cz4Reward) */\n      mload(0x40)\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/GameContract.sol\":1302:1984  {... */\n      pop\n      pop\n        /* \"contracts/GameContract.sol\":1255:1984  function depositFASU(uint fasuAmount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_140\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_147)\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_150:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_151:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_152:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_189\n        /* \"#utility.yul\":306:340   */\n      tag_190\n        /* \"#utility.yul\":315:339   */\n      tag_191\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_150\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":306:340   */\n      tag_151\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":288:341   */\n      tag_150\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_153:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_193\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_152\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_154:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_195\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_153\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_155:\n        /* \"#utility.yul\":732:783   */\n      tag_197\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_154\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_19:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_199\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_155\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_157:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      dup1\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1456   */\n    tag_159:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1450   */\n      dup2\n        /* \"#utility.yul\":1434:1450   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1462:1584   */\n    tag_160:\n        /* \"#utility.yul\":1535:1559   */\n      tag_205\n        /* \"#utility.yul\":1553:1558   */\n      dup2\n        /* \"#utility.yul\":1535:1559   */\n      tag_159\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1528:1533   */\n      dup2\n        /* \"#utility.yul\":1525:1560   */\n      eq\n        /* \"#utility.yul\":1515:1578   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1571:1572   */\n      dup1\n        /* \"#utility.yul\":1564:1576   */\n      revert\n        /* \"#utility.yul\":1515:1578   */\n    tag_206:\n        /* \"#utility.yul\":1462:1584   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1729   */\n    tag_161:\n        /* \"#utility.yul\":1636:1641   */\n      0x00\n        /* \"#utility.yul\":1674:1680   */\n      dup2\n        /* \"#utility.yul\":1661:1681   */\n      calldataload\n        /* \"#utility.yul\":1652:1681   */\n      swap1\n      pop\n        /* \"#utility.yul\":1690:1723   */\n      tag_208\n        /* \"#utility.yul\":1717:1722   */\n      dup2\n        /* \"#utility.yul\":1690:1723   */\n      tag_160\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1590:1729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:2064   */\n    tag_26:\n        /* \"#utility.yul\":1794:1800   */\n      0x00\n        /* \"#utility.yul\":1843:1845   */\n      0x20\n        /* \"#utility.yul\":1831:1840   */\n      dup3\n        /* \"#utility.yul\":1822:1829   */\n      dup5\n        /* \"#utility.yul\":1818:1841   */\n      sub\n        /* \"#utility.yul\":1814:1846   */\n      slt\n        /* \"#utility.yul\":1811:1930   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1849:1928   */\n      tag_211\n      tag_157\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":1811:1930   */\n    tag_210:\n        /* \"#utility.yul\":1969:1970   */\n      0x00\n        /* \"#utility.yul\":1994:2047   */\n      tag_212\n        /* \"#utility.yul\":2039:2046   */\n      dup5\n        /* \"#utility.yul\":2030:2036   */\n      dup3\n        /* \"#utility.yul\":2019:2028   */\n      dup6\n        /* \"#utility.yul\":2015:2037   */\n      add\n        /* \"#utility.yul\":1994:2047   */\n      tag_161\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1984:2047   */\n      swap2\n      pop\n        /* \"#utility.yul\":1940:2057   */\n      pop\n        /* \"#utility.yul\":1735:2064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2070:2188   */\n    tag_162:\n        /* \"#utility.yul\":2157:2181   */\n      tag_214\n        /* \"#utility.yul\":2175:2180   */\n      dup2\n        /* \"#utility.yul\":2157:2181   */\n      tag_159\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2152:2155   */\n      dup3\n        /* \"#utility.yul\":2145:2182   */\n      mstore\n        /* \"#utility.yul\":2070:2188   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2194:2416   */\n    tag_39:\n        /* \"#utility.yul\":2287:2291   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2314:2323   */\n      dup3\n        /* \"#utility.yul\":2310:2328   */\n      add\n        /* \"#utility.yul\":2302:2328   */\n      swap1\n      pop\n        /* \"#utility.yul\":2338:2409   */\n      tag_216\n        /* \"#utility.yul\":2406:2407   */\n      0x00\n        /* \"#utility.yul\":2395:2404   */\n      dup4\n        /* \"#utility.yul\":2391:2408   */\n      add\n        /* \"#utility.yul\":2382:2388   */\n      dup5\n        /* \"#utility.yul\":2338:2409   */\n      tag_162\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2194:2416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2422:2518   */\n    tag_163:\n        /* \"#utility.yul\":2459:2466   */\n      0x00\n        /* \"#utility.yul\":2488:2512   */\n      tag_218\n        /* \"#utility.yul\":2506:2511   */\n      dup3\n        /* \"#utility.yul\":2488:2512   */\n      tag_150\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2477:2512   */\n      swap1\n      pop\n        /* \"#utility.yul\":2422:2518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2642   */\n    tag_164:\n        /* \"#utility.yul\":2611:2635   */\n      tag_220\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_163\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2606:2609   */\n      dup3\n        /* \"#utility.yul\":2599:2636   */\n      mstore\n        /* \"#utility.yul\":2524:2642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:2870   */\n    tag_48:\n        /* \"#utility.yul\":2741:2745   */\n      0x00\n        /* \"#utility.yul\":2779:2781   */\n      0x20\n        /* \"#utility.yul\":2768:2777   */\n      dup3\n        /* \"#utility.yul\":2764:2782   */\n      add\n        /* \"#utility.yul\":2756:2782   */\n      swap1\n      pop\n        /* \"#utility.yul\":2792:2863   */\n      tag_222\n        /* \"#utility.yul\":2860:2861   */\n      0x00\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2862   */\n      add\n        /* \"#utility.yul\":2836:2842   */\n      dup5\n        /* \"#utility.yul\":2792:2863   */\n      tag_164\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2648:2870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:2998   */\n    tag_165:\n        /* \"#utility.yul\":2949:2973   */\n      tag_224\n        /* \"#utility.yul\":2967:2972   */\n      dup2\n        /* \"#utility.yul\":2949:2973   */\n      tag_163\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2942:2947   */\n      dup2\n        /* \"#utility.yul\":2939:2974   */\n      eq\n        /* \"#utility.yul\":2929:2992   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":2985:2986   */\n      dup1\n        /* \"#utility.yul\":2978:2990   */\n      revert\n        /* \"#utility.yul\":2929:2992   */\n    tag_225:\n        /* \"#utility.yul\":2876:2998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3143   */\n    tag_166:\n        /* \"#utility.yul\":3050:3055   */\n      0x00\n        /* \"#utility.yul\":3088:3094   */\n      dup2\n        /* \"#utility.yul\":3075:3095   */\n      calldataload\n        /* \"#utility.yul\":3066:3095   */\n      swap1\n      pop\n        /* \"#utility.yul\":3104:3137   */\n      tag_227\n        /* \"#utility.yul\":3131:3136   */\n      dup2\n        /* \"#utility.yul\":3104:3137   */\n      tag_165\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3004:3143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3149:3478   */\n    tag_52:\n        /* \"#utility.yul\":3208:3214   */\n      0x00\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"#utility.yul\":3245:3254   */\n      dup3\n        /* \"#utility.yul\":3236:3243   */\n      dup5\n        /* \"#utility.yul\":3232:3255   */\n      sub\n        /* \"#utility.yul\":3228:3260   */\n      slt\n        /* \"#utility.yul\":3225:3344   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":3263:3342   */\n      tag_230\n      tag_157\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3225:3344   */\n    tag_229:\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3408:3461   */\n      tag_231\n        /* \"#utility.yul\":3453:3460   */\n      dup5\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3433:3442   */\n      dup6\n        /* \"#utility.yul\":3429:3451   */\n      add\n        /* \"#utility.yul\":3408:3461   */\n      tag_166\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":3398:3461   */\n      swap2\n      pop\n        /* \"#utility.yul\":3354:3471   */\n      pop\n        /* \"#utility.yul\":3149:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3627   */\n    tag_167:\n        /* \"#utility.yul\":3541:3546   */\n      0x00\n        /* \"#utility.yul\":3572:3578   */\n      dup2\n        /* \"#utility.yul\":3566:3579   */\n      mload\n        /* \"#utility.yul\":3557:3579   */\n      swap1\n      pop\n        /* \"#utility.yul\":3588:3621   */\n      tag_233\n        /* \"#utility.yul\":3615:3620   */\n      dup2\n        /* \"#utility.yul\":3588:3621   */\n      tag_160\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3484:3627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3633:3984   */\n    tag_62:\n        /* \"#utility.yul\":3703:3709   */\n      0x00\n        /* \"#utility.yul\":3752:3754   */\n      0x20\n        /* \"#utility.yul\":3740:3749   */\n      dup3\n        /* \"#utility.yul\":3731:3738   */\n      dup5\n        /* \"#utility.yul\":3727:3750   */\n      sub\n        /* \"#utility.yul\":3723:3755   */\n      slt\n        /* \"#utility.yul\":3720:3839   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":3758:3837   */\n      tag_236\n      tag_157\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3720:3839   */\n    tag_235:\n        /* \"#utility.yul\":3878:3879   */\n      0x00\n        /* \"#utility.yul\":3903:3967   */\n      tag_237\n        /* \"#utility.yul\":3959:3966   */\n      dup5\n        /* \"#utility.yul\":3950:3956   */\n      dup3\n        /* \"#utility.yul\":3939:3948   */\n      dup6\n        /* \"#utility.yul\":3935:3957   */\n      add\n        /* \"#utility.yul\":3903:3967   */\n      tag_167\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3893:3967   */\n      swap2\n      pop\n        /* \"#utility.yul\":3849:3977   */\n      pop\n        /* \"#utility.yul\":3633:3984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3990:4159   */\n    tag_168:\n        /* \"#utility.yul\":4074:4085   */\n      0x00\n        /* \"#utility.yul\":4108:4114   */\n      dup3\n        /* \"#utility.yul\":4103:4106   */\n      dup3\n        /* \"#utility.yul\":4096:4115   */\n      mstore\n        /* \"#utility.yul\":4148:4152   */\n      0x20\n        /* \"#utility.yul\":4143:4146   */\n      dup3\n        /* \"#utility.yul\":4139:4153   */\n      add\n        /* \"#utility.yul\":4124:4153   */\n      swap1\n      pop\n        /* \"#utility.yul\":3990:4159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4165:4390   */\n    tag_169:\n        /* \"#utility.yul\":4305:4339   */\n      0x5072697a6520616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":4301:4302   */\n      0x00\n        /* \"#utility.yul\":4293:4299   */\n      dup3\n        /* \"#utility.yul\":4289:4303   */\n      add\n        /* \"#utility.yul\":4282:4340   */\n      mstore\n        /* \"#utility.yul\":4374:4382   */\n      0x6e207a65726f0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4369:4371   */\n      0x20\n        /* \"#utility.yul\":4361:4367   */\n      dup3\n        /* \"#utility.yul\":4357:4372   */\n      add\n        /* \"#utility.yul\":4350:4383   */\n      mstore\n        /* \"#utility.yul\":4165:4390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4396:4762   */\n    tag_170:\n        /* \"#utility.yul\":4538:4541   */\n      0x00\n        /* \"#utility.yul\":4559:4626   */\n      tag_241\n        /* \"#utility.yul\":4623:4625   */\n      0x26\n        /* \"#utility.yul\":4618:4621   */\n      dup4\n        /* \"#utility.yul\":4559:4626   */\n      tag_168\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4552:4626   */\n      swap2\n      pop\n        /* \"#utility.yul\":4635:4728   */\n      tag_242\n        /* \"#utility.yul\":4724:4727   */\n      dup3\n        /* \"#utility.yul\":4635:4728   */\n      tag_169\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4753:4755   */\n      0x40\n        /* \"#utility.yul\":4748:4751   */\n      dup3\n        /* \"#utility.yul\":4744:4756   */\n      add\n        /* \"#utility.yul\":4737:4756   */\n      swap1\n      pop\n        /* \"#utility.yul\":4396:4762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4768:5187   */\n    tag_83:\n        /* \"#utility.yul\":4934:4938   */\n      0x00\n        /* \"#utility.yul\":4972:4974   */\n      0x20\n        /* \"#utility.yul\":4961:4970   */\n      dup3\n        /* \"#utility.yul\":4957:4975   */\n      add\n        /* \"#utility.yul\":4949:4975   */\n      swap1\n      pop\n        /* \"#utility.yul\":5021:5030   */\n      dup2\n        /* \"#utility.yul\":5015:5019   */\n      dup2\n        /* \"#utility.yul\":5011:5031   */\n      sub\n        /* \"#utility.yul\":5007:5008   */\n      0x00\n        /* \"#utility.yul\":4996:5005   */\n      dup4\n        /* \"#utility.yul\":4992:5009   */\n      add\n        /* \"#utility.yul\":4985:5032   */\n      mstore\n        /* \"#utility.yul\":5049:5180   */\n      tag_244\n        /* \"#utility.yul\":5175:5179   */\n      dup2\n        /* \"#utility.yul\":5049:5180   */\n      tag_170\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5041:5180   */\n      swap1\n      pop\n        /* \"#utility.yul\":4768:5187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5193:5373   */\n    tag_171:\n        /* \"#utility.yul\":5241:5318   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5238:5239   */\n      0x00\n        /* \"#utility.yul\":5231:5319   */\n      mstore\n        /* \"#utility.yul\":5338:5342   */\n      0x11\n        /* \"#utility.yul\":5335:5336   */\n      0x04\n        /* \"#utility.yul\":5328:5343   */\n      mstore\n        /* \"#utility.yul\":5362:5366   */\n      0x24\n        /* \"#utility.yul\":5359:5360   */\n      0x00\n        /* \"#utility.yul\":5352:5367   */\n      revert\n        /* \"#utility.yul\":5379:5570   */\n    tag_87:\n        /* \"#utility.yul\":5419:5422   */\n      0x00\n        /* \"#utility.yul\":5438:5458   */\n      tag_247\n        /* \"#utility.yul\":5456:5457   */\n      dup3\n        /* \"#utility.yul\":5438:5458   */\n      tag_159\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5433:5458   */\n      swap2\n      pop\n        /* \"#utility.yul\":5472:5492   */\n      tag_248\n        /* \"#utility.yul\":5490:5491   */\n      dup4\n        /* \"#utility.yul\":5472:5492   */\n      tag_159\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":5467:5492   */\n      swap3\n      pop\n        /* \"#utility.yul\":5515:5516   */\n      dup3\n        /* \"#utility.yul\":5512:5513   */\n      dup3\n        /* \"#utility.yul\":5508:5517   */\n      add\n        /* \"#utility.yul\":5501:5517   */\n      swap1\n      pop\n        /* \"#utility.yul\":5536:5539   */\n      dup1\n        /* \"#utility.yul\":5533:5534   */\n      dup3\n        /* \"#utility.yul\":5530:5540   */\n      gt\n        /* \"#utility.yul\":5527:5563   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":5543:5561   */\n      tag_250\n      tag_171\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":5527:5563   */\n    tag_249:\n        /* \"#utility.yul\":5379:5570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5576:5803   */\n    tag_172:\n        /* \"#utility.yul\":5716:5750   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":5712:5713   */\n      0x00\n        /* \"#utility.yul\":5704:5710   */\n      dup3\n        /* \"#utility.yul\":5700:5714   */\n      add\n        /* \"#utility.yul\":5693:5751   */\n      mstore\n        /* \"#utility.yul\":5785:5795   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5780:5782   */\n      0x20\n        /* \"#utility.yul\":5772:5778   */\n      dup3\n        /* \"#utility.yul\":5768:5783   */\n      add\n        /* \"#utility.yul\":5761:5796   */\n      mstore\n        /* \"#utility.yul\":5576:5803   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5809:6175   */\n    tag_173:\n        /* \"#utility.yul\":5951:5954   */\n      0x00\n        /* \"#utility.yul\":5972:6039   */\n      tag_253\n        /* \"#utility.yul\":6036:6038   */\n      0x28\n        /* \"#utility.yul\":6031:6034   */\n      dup4\n        /* \"#utility.yul\":5972:6039   */\n      tag_168\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5965:6039   */\n      swap2\n      pop\n        /* \"#utility.yul\":6048:6141   */\n      tag_254\n        /* \"#utility.yul\":6137:6140   */\n      dup3\n        /* \"#utility.yul\":6048:6141   */\n      tag_172\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6166:6168   */\n      0x40\n        /* \"#utility.yul\":6161:6164   */\n      dup3\n        /* \"#utility.yul\":6157:6169   */\n      add\n        /* \"#utility.yul\":6150:6169   */\n      swap1\n      pop\n        /* \"#utility.yul\":5809:6175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6181:6600   */\n    tag_97:\n        /* \"#utility.yul\":6347:6351   */\n      0x00\n        /* \"#utility.yul\":6385:6387   */\n      0x20\n        /* \"#utility.yul\":6374:6383   */\n      dup3\n        /* \"#utility.yul\":6370:6388   */\n      add\n        /* \"#utility.yul\":6362:6388   */\n      swap1\n      pop\n        /* \"#utility.yul\":6434:6443   */\n      dup2\n        /* \"#utility.yul\":6428:6432   */\n      dup2\n        /* \"#utility.yul\":6424:6444   */\n      sub\n        /* \"#utility.yul\":6420:6421   */\n      0x00\n        /* \"#utility.yul\":6409:6418   */\n      dup4\n        /* \"#utility.yul\":6405:6422   */\n      add\n        /* \"#utility.yul\":6398:6445   */\n      mstore\n        /* \"#utility.yul\":6462:6593   */\n      tag_256\n        /* \"#utility.yul\":6588:6592   */\n      dup2\n        /* \"#utility.yul\":6462:6593   */\n      tag_173\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6454:6593   */\n      swap1\n      pop\n        /* \"#utility.yul\":6181:6600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6606:6775   */\n    tag_174:\n        /* \"#utility.yul\":6746:6767   */\n      0x5072697a6520706f6f6c20697320656d70747900000000000000000000000000\n        /* \"#utility.yul\":6742:6743   */\n      0x00\n        /* \"#utility.yul\":6734:6740   */\n      dup3\n        /* \"#utility.yul\":6730:6744   */\n      add\n        /* \"#utility.yul\":6723:6768   */\n      mstore\n        /* \"#utility.yul\":6606:6775   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6781:7147   */\n    tag_175:\n        /* \"#utility.yul\":6923:6926   */\n      0x00\n        /* \"#utility.yul\":6944:7011   */\n      tag_259\n        /* \"#utility.yul\":7008:7010   */\n      0x13\n        /* \"#utility.yul\":7003:7006   */\n      dup4\n        /* \"#utility.yul\":6944:7011   */\n      tag_168\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6937:7011   */\n      swap2\n      pop\n        /* \"#utility.yul\":7020:7113   */\n      tag_260\n        /* \"#utility.yul\":7109:7112   */\n      dup3\n        /* \"#utility.yul\":7020:7113   */\n      tag_174\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7138:7140   */\n      0x20\n        /* \"#utility.yul\":7133:7136   */\n      dup3\n        /* \"#utility.yul\":7129:7141   */\n      add\n        /* \"#utility.yul\":7122:7141   */\n      swap1\n      pop\n        /* \"#utility.yul\":6781:7147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7153:7572   */\n    tag_100:\n        /* \"#utility.yul\":7319:7323   */\n      0x00\n        /* \"#utility.yul\":7357:7359   */\n      0x20\n        /* \"#utility.yul\":7346:7355   */\n      dup3\n        /* \"#utility.yul\":7342:7360   */\n      add\n        /* \"#utility.yul\":7334:7360   */\n      swap1\n      pop\n        /* \"#utility.yul\":7406:7415   */\n      dup2\n        /* \"#utility.yul\":7400:7404   */\n      dup2\n        /* \"#utility.yul\":7396:7416   */\n      sub\n        /* \"#utility.yul\":7392:7393   */\n      0x00\n        /* \"#utility.yul\":7381:7390   */\n      dup4\n        /* \"#utility.yul\":7377:7394   */\n      add\n        /* \"#utility.yul\":7370:7417   */\n      mstore\n        /* \"#utility.yul\":7434:7565   */\n      tag_262\n        /* \"#utility.yul\":7560:7564   */\n      dup2\n        /* \"#utility.yul\":7434:7565   */\n      tag_175\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7426:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7153:7572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7578:7657   */\n    tag_176:\n        /* \"#utility.yul\":7617:7624   */\n      0x00\n        /* \"#utility.yul\":7646:7651   */\n      dup2\n        /* \"#utility.yul\":7635:7651   */\n      swap1\n      pop\n        /* \"#utility.yul\":7578:7657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7663:7820   */\n    tag_177:\n        /* \"#utility.yul\":7768:7813   */\n      tag_265\n        /* \"#utility.yul\":7788:7812   */\n      tag_266\n        /* \"#utility.yul\":7806:7811   */\n      dup3\n        /* \"#utility.yul\":7788:7812   */\n      tag_159\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7768:7813   */\n      tag_176\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":7763:7766   */\n      dup3\n        /* \"#utility.yul\":7756:7814   */\n      mstore\n        /* \"#utility.yul\":7663:7820   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7826:7920   */\n    tag_178:\n        /* \"#utility.yul\":7859:7867   */\n      0x00\n        /* \"#utility.yul\":7907:7912   */\n      dup2\n        /* \"#utility.yul\":7903:7905   */\n      0x60\n        /* \"#utility.yul\":7899:7913   */\n      shl\n        /* \"#utility.yul\":7878:7913   */\n      swap1\n      pop\n        /* \"#utility.yul\":7826:7920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8020   */\n    tag_179:\n        /* \"#utility.yul\":7965:7972   */\n      0x00\n        /* \"#utility.yul\":7994:8014   */\n      tag_269\n        /* \"#utility.yul\":8008:8013   */\n      dup3\n        /* \"#utility.yul\":7994:8014   */\n      tag_178\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7983:8014   */\n      swap1\n      pop\n        /* \"#utility.yul\":7926:8020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8026:8126   */\n    tag_180:\n        /* \"#utility.yul\":8065:8072   */\n      0x00\n        /* \"#utility.yul\":8094:8120   */\n      tag_271\n        /* \"#utility.yul\":8114:8119   */\n      dup3\n        /* \"#utility.yul\":8094:8120   */\n      tag_179\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8083:8120   */\n      swap1\n      pop\n        /* \"#utility.yul\":8026:8126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8132:8289   */\n    tag_181:\n        /* \"#utility.yul\":8237:8282   */\n      tag_273\n        /* \"#utility.yul\":8257:8281   */\n      tag_274\n        /* \"#utility.yul\":8275:8280   */\n      dup3\n        /* \"#utility.yul\":8257:8281   */\n      tag_163\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8237:8282   */\n      tag_180\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8232:8235   */\n      dup3\n        /* \"#utility.yul\":8225:8283   */\n      mstore\n        /* \"#utility.yul\":8132:8289   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8295:8833   */\n    tag_103:\n        /* \"#utility.yul\":8463:8466   */\n      0x00\n        /* \"#utility.yul\":8478:8553   */\n      tag_276\n        /* \"#utility.yul\":8549:8552   */\n      dup3\n        /* \"#utility.yul\":8540:8546   */\n      dup7\n        /* \"#utility.yul\":8478:8553   */\n      tag_177\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8578:8580   */\n      0x20\n        /* \"#utility.yul\":8573:8576   */\n      dup3\n        /* \"#utility.yul\":8569:8581   */\n      add\n        /* \"#utility.yul\":8562:8581   */\n      swap2\n      pop\n        /* \"#utility.yul\":8591:8666   */\n      tag_277\n        /* \"#utility.yul\":8662:8665   */\n      dup3\n        /* \"#utility.yul\":8653:8659   */\n      dup6\n        /* \"#utility.yul\":8591:8666   */\n      tag_177\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":8691:8693   */\n      0x20\n        /* \"#utility.yul\":8686:8689   */\n      dup3\n        /* \"#utility.yul\":8682:8694   */\n      add\n        /* \"#utility.yul\":8675:8694   */\n      swap2\n      pop\n        /* \"#utility.yul\":8704:8779   */\n      tag_278\n        /* \"#utility.yul\":8775:8778   */\n      dup3\n        /* \"#utility.yul\":8766:8772   */\n      dup5\n        /* \"#utility.yul\":8704:8779   */\n      tag_181\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":8804:8806   */\n      0x14\n        /* \"#utility.yul\":8799:8802   */\n      dup3\n        /* \"#utility.yul\":8795:8807   */\n      add\n        /* \"#utility.yul\":8788:8807   */\n      swap2\n      pop\n        /* \"#utility.yul\":8824:8827   */\n      dup2\n        /* \"#utility.yul\":8817:8827   */\n      swap1\n      pop\n        /* \"#utility.yul\":8295:8833   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8839:9019   */\n    tag_182:\n        /* \"#utility.yul\":8887:8964   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8884:8885   */\n      0x00\n        /* \"#utility.yul\":8877:8965   */\n      mstore\n        /* \"#utility.yul\":8984:8988   */\n      0x12\n        /* \"#utility.yul\":8981:8982   */\n      0x04\n        /* \"#utility.yul\":8974:8989   */\n      mstore\n        /* \"#utility.yul\":9008:9012   */\n      0x24\n        /* \"#utility.yul\":9005:9006   */\n      0x00\n        /* \"#utility.yul\":8998:9013   */\n      revert\n        /* \"#utility.yul\":9025:9201   */\n    tag_105:\n        /* \"#utility.yul\":9057:9058   */\n      0x00\n        /* \"#utility.yul\":9074:9094   */\n      tag_281\n        /* \"#utility.yul\":9092:9093   */\n      dup3\n        /* \"#utility.yul\":9074:9094   */\n      tag_159\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":9069:9094   */\n      swap2\n      pop\n        /* \"#utility.yul\":9108:9128   */\n      tag_282\n        /* \"#utility.yul\":9126:9127   */\n      dup4\n        /* \"#utility.yul\":9108:9128   */\n      tag_159\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9103:9128   */\n      swap3\n      pop\n        /* \"#utility.yul\":9147:9148   */\n      dup3\n        /* \"#utility.yul\":9137:9172   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":9152:9170   */\n      tag_284\n      tag_182\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":9137:9172   */\n    tag_283:\n        /* \"#utility.yul\":9193:9194   */\n      dup3\n        /* \"#utility.yul\":9190:9191   */\n      dup3\n        /* \"#utility.yul\":9186:9195   */\n      mod\n        /* \"#utility.yul\":9181:9195   */\n      swap1\n      pop\n        /* \"#utility.yul\":9025:9201   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9207:9392   */\n    tag_108:\n        /* \"#utility.yul\":9247:9248   */\n      0x00\n        /* \"#utility.yul\":9264:9284   */\n      tag_286\n        /* \"#utility.yul\":9282:9283   */\n      dup3\n        /* \"#utility.yul\":9264:9284   */\n      tag_159\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9259:9284   */\n      swap2\n      pop\n        /* \"#utility.yul\":9298:9318   */\n      tag_287\n        /* \"#utility.yul\":9316:9317   */\n      dup4\n        /* \"#utility.yul\":9298:9318   */\n      tag_159\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":9293:9318   */\n      swap3\n      pop\n        /* \"#utility.yul\":9337:9338   */\n      dup3\n        /* \"#utility.yul\":9327:9362   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":9342:9360   */\n      tag_289\n      tag_182\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":9327:9362   */\n    tag_288:\n        /* \"#utility.yul\":9384:9385   */\n      dup3\n        /* \"#utility.yul\":9381:9382   */\n      dup3\n        /* \"#utility.yul\":9377:9386   */\n      div\n        /* \"#utility.yul\":9372:9386   */\n      swap1\n      pop\n        /* \"#utility.yul\":9207:9392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9398:9808   */\n    tag_110:\n        /* \"#utility.yul\":9438:9445   */\n      0x00\n        /* \"#utility.yul\":9461:9481   */\n      tag_291\n        /* \"#utility.yul\":9479:9480   */\n      dup3\n        /* \"#utility.yul\":9461:9481   */\n      tag_159\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":9456:9481   */\n      swap2\n      pop\n        /* \"#utility.yul\":9495:9515   */\n      tag_292\n        /* \"#utility.yul\":9513:9514   */\n      dup4\n        /* \"#utility.yul\":9495:9515   */\n      tag_159\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":9490:9515   */\n      swap3\n      pop\n        /* \"#utility.yul\":9550:9551   */\n      dup3\n        /* \"#utility.yul\":9547:9548   */\n      dup3\n        /* \"#utility.yul\":9543:9552   */\n      mul\n        /* \"#utility.yul\":9572:9602   */\n      tag_293\n        /* \"#utility.yul\":9590:9601   */\n      dup2\n        /* \"#utility.yul\":9572:9602   */\n      tag_159\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":9561:9602   */\n      swap2\n      pop\n        /* \"#utility.yul\":9751:9752   */\n      dup3\n        /* \"#utility.yul\":9742:9749   */\n      dup3\n        /* \"#utility.yul\":9738:9753   */\n      div\n        /* \"#utility.yul\":9735:9736   */\n      dup5\n        /* \"#utility.yul\":9732:9754   */\n      eq\n        /* \"#utility.yul\":9712:9713   */\n      dup4\n        /* \"#utility.yul\":9705:9714   */\n      iszero\n        /* \"#utility.yul\":9685:9768   */\n      or\n        /* \"#utility.yul\":9662:9801   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":9781:9799   */\n      tag_295\n      tag_171\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":9662:9801   */\n    tag_294:\n        /* \"#utility.yul\":9446:9808   */\n      pop\n        /* \"#utility.yul\":9398:9808   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9814:9992   */\n    tag_183:\n        /* \"#utility.yul\":9954:9984   */\n      0x4e6f7420656e6f75676820435a3420696e207072697a6520706f6f6c00000000\n        /* \"#utility.yul\":9950:9951   */\n      0x00\n        /* \"#utility.yul\":9942:9948   */\n      dup3\n        /* \"#utility.yul\":9938:9952   */\n      add\n        /* \"#utility.yul\":9931:9985   */\n      mstore\n        /* \"#utility.yul\":9814:9992   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9998:10364   */\n    tag_184:\n        /* \"#utility.yul\":10140:10143   */\n      0x00\n        /* \"#utility.yul\":10161:10228   */\n      tag_298\n        /* \"#utility.yul\":10225:10227   */\n      0x1c\n        /* \"#utility.yul\":10220:10223   */\n      dup4\n        /* \"#utility.yul\":10161:10228   */\n      tag_168\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10154:10228   */\n      swap2\n      pop\n        /* \"#utility.yul\":10237:10330   */\n      tag_299\n        /* \"#utility.yul\":10326:10329   */\n      dup3\n        /* \"#utility.yul\":10237:10330   */\n      tag_183\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10355:10357   */\n      0x20\n        /* \"#utility.yul\":10350:10353   */\n      dup3\n        /* \"#utility.yul\":10346:10358   */\n      add\n        /* \"#utility.yul\":10339:10358   */\n      swap1\n      pop\n        /* \"#utility.yul\":9998:10364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10370:10789   */\n    tag_113:\n        /* \"#utility.yul\":10536:10540   */\n      0x00\n        /* \"#utility.yul\":10574:10576   */\n      0x20\n        /* \"#utility.yul\":10563:10572   */\n      dup3\n        /* \"#utility.yul\":10559:10577   */\n      add\n        /* \"#utility.yul\":10551:10577   */\n      swap1\n      pop\n        /* \"#utility.yul\":10623:10632   */\n      dup2\n        /* \"#utility.yul\":10617:10621   */\n      dup2\n        /* \"#utility.yul\":10613:10633   */\n      sub\n        /* \"#utility.yul\":10609:10610   */\n      0x00\n        /* \"#utility.yul\":10598:10607   */\n      dup4\n        /* \"#utility.yul\":10594:10611   */\n      add\n        /* \"#utility.yul\":10587:10634   */\n      mstore\n        /* \"#utility.yul\":10651:10782   */\n      tag_301\n        /* \"#utility.yul\":10777:10781   */\n      dup2\n        /* \"#utility.yul\":10651:10782   */\n      tag_184\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10643:10782   */\n      swap1\n      pop\n        /* \"#utility.yul\":10370:10789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10795:10989   */\n    tag_115:\n        /* \"#utility.yul\":10835:10839   */\n      0x00\n        /* \"#utility.yul\":10855:10875   */\n      tag_303\n        /* \"#utility.yul\":10873:10874   */\n      dup3\n        /* \"#utility.yul\":10855:10875   */\n      tag_159\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10850:10875   */\n      swap2\n      pop\n        /* \"#utility.yul\":10889:10909   */\n      tag_304\n        /* \"#utility.yul\":10907:10908   */\n      dup4\n        /* \"#utility.yul\":10889:10909   */\n      tag_159\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":10884:10909   */\n      swap3\n      pop\n        /* \"#utility.yul\":10933:10934   */\n      dup3\n        /* \"#utility.yul\":10930:10931   */\n      dup3\n        /* \"#utility.yul\":10926:10935   */\n      sub\n        /* \"#utility.yul\":10918:10935   */\n      swap1\n      pop\n        /* \"#utility.yul\":10957:10958   */\n      dup2\n        /* \"#utility.yul\":10951:10955   */\n      dup2\n        /* \"#utility.yul\":10948:10959   */\n      gt\n        /* \"#utility.yul\":10945:10982   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":10962:10980   */\n      tag_306\n      tag_171\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10945:10982   */\n    tag_305:\n        /* \"#utility.yul\":10795:10989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10995:11327   */\n    tag_118:\n        /* \"#utility.yul\":11116:11120   */\n      0x00\n        /* \"#utility.yul\":11154:11156   */\n      0x40\n        /* \"#utility.yul\":11143:11152   */\n      dup3\n        /* \"#utility.yul\":11139:11157   */\n      add\n        /* \"#utility.yul\":11131:11157   */\n      swap1\n      pop\n        /* \"#utility.yul\":11167:11238   */\n      tag_308\n        /* \"#utility.yul\":11235:11236   */\n      0x00\n        /* \"#utility.yul\":11224:11233   */\n      dup4\n        /* \"#utility.yul\":11220:11237   */\n      add\n        /* \"#utility.yul\":11211:11217   */\n      dup6\n        /* \"#utility.yul\":11167:11238   */\n      tag_162\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":11248:11320   */\n      tag_309\n        /* \"#utility.yul\":11316:11318   */\n      0x20\n        /* \"#utility.yul\":11305:11314   */\n      dup4\n        /* \"#utility.yul\":11301:11319   */\n      add\n        /* \"#utility.yul\":11292:11298   */\n      dup5\n        /* \"#utility.yul\":11248:11320   */\n      tag_162\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":10995:11327   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11333:11665   */\n    tag_136:\n        /* \"#utility.yul\":11454:11458   */\n      0x00\n        /* \"#utility.yul\":11492:11494   */\n      0x40\n        /* \"#utility.yul\":11481:11490   */\n      dup3\n        /* \"#utility.yul\":11477:11495   */\n      add\n        /* \"#utility.yul\":11469:11495   */\n      swap1\n      pop\n        /* \"#utility.yul\":11505:11576   */\n      tag_311\n        /* \"#utility.yul\":11573:11574   */\n      0x00\n        /* \"#utility.yul\":11562:11571   */\n      dup4\n        /* \"#utility.yul\":11558:11575   */\n      add\n        /* \"#utility.yul\":11549:11555   */\n      dup6\n        /* \"#utility.yul\":11505:11576   */\n      tag_164\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11586:11658   */\n      tag_312\n        /* \"#utility.yul\":11654:11656   */\n      0x20\n        /* \"#utility.yul\":11643:11652   */\n      dup4\n        /* \"#utility.yul\":11639:11657   */\n      add\n        /* \"#utility.yul\":11630:11636   */\n      dup5\n        /* \"#utility.yul\":11586:11658   */\n      tag_162\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11333:11665   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11671:12113   */\n    tag_141:\n        /* \"#utility.yul\":11820:11824   */\n      0x00\n        /* \"#utility.yul\":11858:11860   */\n      0x60\n        /* \"#utility.yul\":11847:11856   */\n      dup3\n        /* \"#utility.yul\":11843:11861   */\n      add\n        /* \"#utility.yul\":11835:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11871:11942   */\n      tag_314\n        /* \"#utility.yul\":11939:11940   */\n      0x00\n        /* \"#utility.yul\":11928:11937   */\n      dup4\n        /* \"#utility.yul\":11924:11941   */\n      add\n        /* \"#utility.yul\":11915:11921   */\n      dup7\n        /* \"#utility.yul\":11871:11942   */\n      tag_164\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":11952:12024   */\n      tag_315\n        /* \"#utility.yul\":12020:12022   */\n      0x20\n        /* \"#utility.yul\":12009:12018   */\n      dup4\n        /* \"#utility.yul\":12005:12023   */\n      add\n        /* \"#utility.yul\":11996:12002   */\n      dup6\n        /* \"#utility.yul\":11952:12024   */\n      tag_164\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12034:12106   */\n      tag_316\n        /* \"#utility.yul\":12102:12104   */\n      0x40\n        /* \"#utility.yul\":12091:12100   */\n      dup4\n        /* \"#utility.yul\":12087:12105   */\n      add\n        /* \"#utility.yul\":12078:12084   */\n      dup5\n        /* \"#utility.yul\":12034:12106   */\n      tag_162\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11671:12113   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122002dd75bba71c59916e82e7ee054cb13b51c652066503c2981b82a3f558cc5fca64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1101": {
									"entryPoint": null,
									"id": 1101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 333,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:11",
										"nodeType": "YulBlock",
										"src": "0:1707:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "939:413:11",
													"nodeType": "YulBlock",
													"src": "939:413:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:11",
																"nodeType": "YulBlock",
																"src": "985:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:11"
																			},
																			"nativeSrc": "987:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:11"
																		},
																		"nativeSrc": "987:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:11"
																		},
																		"nativeSrc": "956:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:11",
																		"nodeType": "YulLiteral",
																		"src": "981:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:11"
																},
																"nativeSrc": "952:32:11",
																"nodeType": "YulFunctionCall",
																"src": "952:32:11"
															},
															"nativeSrc": "949:119:11",
															"nodeType": "YulIf",
															"src": "949:119:11"
														},
														{
															"nativeSrc": "1078:128:11",
															"nodeType": "YulBlock",
															"src": "1078:128:11",
															"statements": [
																{
																	"nativeSrc": "1093:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:11"
																				},
																				"nativeSrc": "1164:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:11"
																		},
																		"nativeSrc": "1132:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:11",
															"nodeType": "YulBlock",
															"src": "1216:129:11",
															"statements": [
																{
																	"nativeSrc": "1231:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:11"
																				},
																				"nativeSrc": "1303:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:11"
																		},
																		"nativeSrc": "1271:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:11",
														"nodeType": "YulTypedName",
														"src": "901:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:11",
														"nodeType": "YulTypedName",
														"src": "912:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:11",
														"nodeType": "YulTypedName",
														"src": "924:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:11",
														"nodeType": "YulTypedName",
														"src": "932:6:11",
														"type": ""
													}
												],
												"src": "845:507:11"
											},
											{
												"body": {
													"nativeSrc": "1423:53:11",
													"nodeType": "YulBlock",
													"src": "1423:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:11"
																		},
																		"nativeSrc": "1445:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:11"
																},
																"nativeSrc": "1433:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:11"
															},
															"nativeSrc": "1433:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:11",
														"nodeType": "YulTypedName",
														"src": "1411:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:11",
														"nodeType": "YulTypedName",
														"src": "1418:3:11",
														"type": ""
													}
												],
												"src": "1358:118:11"
											},
											{
												"body": {
													"nativeSrc": "1580:124:11",
													"nodeType": "YulBlock",
													"src": "1580:124:11",
													"statements": [
														{
															"nativeSrc": "1590:26:11",
															"nodeType": "YulAssignment",
															"src": "1590:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:11"
																},
																"nativeSrc": "1598:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:11"
																		},
																		"nativeSrc": "1679:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:11"
																},
																"nativeSrc": "1626:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:11"
															},
															"nativeSrc": "1626:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:11",
														"nodeType": "YulTypedName",
														"src": "1552:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:11",
														"nodeType": "YulTypedName",
														"src": "1564:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:11",
														"nodeType": "YulTypedName",
														"src": "1575:4:11",
														"type": ""
													}
												],
												"src": "1482:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516114cf3803806114cf8339818101604052810190610031919061026c565b7350dd541ad540d046e5822a1d5440060d58776ea65f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100ad91906102b9565b60405180910390fd5b6100c58161014d60201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102d2565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023b82610212565b9050919050565b61024b81610231565b8114610255575f80fd5b50565b5f8151905061026681610242565b92915050565b5f80604083850312156102825761028161020e565b5b5f61028f85828601610258565b92505060206102a085828601610258565b9150509250929050565b6102b381610231565b82525050565b5f6020820190506102cc5f8301846102aa565b92915050565b6111f0806102df5f395ff3fe608060405260043610610089575f3560e01c8063715018a611610058578063715018a614610126578063785fa6271461013c57806379d4964f146101665780638da5cb5b1461018e578063f2fde38b146101b857610090565b80631e1a6e6e1461009457806324600fc3146100be5780632a050024146100d457806344a88070146100fc57610090565b3661009057005b5f80fd5b34801561009f575f80fd5b506100a86101e0565b6040516100b59190610bc9565b60405180910390f35b3480156100c9575f80fd5b506100d2610205565b005b3480156100df575f80fd5b506100fa60048036038101906100f59190610c19565b61045a565b005b348015610107575f80fd5b50610110610544565b60405161011d9190610bc9565b60405180910390f35b348015610131575f80fd5b5061013a610569565b005b348015610147575f80fd5b5061015061057c565b60405161015d9190610c53565b60405180910390f35b348015610171575f80fd5b5061018c60048036038101906101879190610c19565b610582565b005b348015610199575f80fd5b506101a26107b9565b6040516101af9190610c8c565b60405180910390f35b3480156101c3575f80fd5b506101de60048036038101906101d99190610ccf565b6107e0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61020d610864565b5f4790505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161026c9190610c8c565b602060405180830381865afa158015610287573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ab9190610d0e565b90505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103089190610c8c565b602060405180830381865afa158015610323573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103479190610d0e565b90505f83111561039d576103596107b9565b73ffffffffffffffffffffffffffffffffffffffff166108fc8490811502906040515f60405180830381858888f1935050505015801561039b573d5f803e3d5ffd5b505b5f8211156103f9576103f86103b06107b9565b8360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108eb9092919063ffffffff16565b5b5f8111156104555761045461040c6107b9565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108eb9092919063ffffffff16565b5b505050565b610462610864565b5f81116104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610db9565b60405180910390fd5b6104f233308360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661096a909392919063ffffffff16565b8060035f8282546105039190610e04565b925050819055507f7e4809669d29d4f60fc52cdc899ff62c77b16c6a3893532c483386afa590a271816040516105399190610c53565b60405180910390a150565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610571610864565b61057a5f6109ec565b565b60035481565b5f81116105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610ea7565b60405180910390fd5b5f60035411610608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90610f0f565b60405180910390fd5b61065633308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661096a909392919063ffffffff16565b5f6001600542443360405160200161067093929190610f92565b604051602081830303815290604052805190602001205f1c6106929190610ffb565b61069c9190610e04565b90505f81620f4240846106af919061102b565b6106b9919061105b565b9050600354811115610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f7906110e6565b60405180910390fd5b8060035f8282546107119190611104565b92505081905550610764338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108eb9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f6dd63c9a34674245c3658d149ff4d640423eb11008c777a57783c3237d96ffcf84836040516107ac929190611137565b60405180910390a2505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107e8610864565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610858575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161084f9190610c8c565b60405180910390fd5b610861816109ec565b50565b61086c610aad565b73ffffffffffffffffffffffffffffffffffffffff1661088a6107b9565b73ffffffffffffffffffffffffffffffffffffffff16146108e9576108ad610aad565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108e09190610c8c565b60405180910390fd5b565b610965838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161091e92919061115e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ab4565b505050565b6109e6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161099f93929190611185565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ab4565b50505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8060205f8451602086015f885af180610ad3576040513d5f823e3d81fd5b3d92505f519150505f8214610aec576001811415610b07565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b4957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b409190610c8c565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610b91610b8c610b8784610b4f565b610b6e565b610b4f565b9050919050565b5f610ba282610b77565b9050919050565b5f610bb382610b98565b9050919050565b610bc381610ba9565b82525050565b5f602082019050610bdc5f830184610bba565b92915050565b5f80fd5b5f819050919050565b610bf881610be6565b8114610c02575f80fd5b50565b5f81359050610c1381610bef565b92915050565b5f60208284031215610c2e57610c2d610be2565b5b5f610c3b84828501610c05565b91505092915050565b610c4d81610be6565b82525050565b5f602082019050610c665f830184610c44565b92915050565b5f610c7682610b4f565b9050919050565b610c8681610c6c565b82525050565b5f602082019050610c9f5f830184610c7d565b92915050565b610cae81610c6c565b8114610cb8575f80fd5b50565b5f81359050610cc981610ca5565b92915050565b5f60208284031215610ce457610ce3610be2565b5b5f610cf184828501610cbb565b91505092915050565b5f81519050610d0881610bef565b92915050565b5f60208284031215610d2357610d22610be2565b5b5f610d3084828501610cfa565b91505092915050565b5f82825260208201905092915050565b7f5072697a6520616d6f756e74206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f610da3602683610d39565b9150610dae82610d49565b604082019050919050565b5f6020820190508181035f830152610dd081610d97565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e0e82610be6565b9150610e1983610be6565b9250828201905080821115610e3157610e30610dd7565b5b92915050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f610e91602883610d39565b9150610e9c82610e37565b604082019050919050565b5f6020820190508181035f830152610ebe81610e85565b9050919050565b7f5072697a6520706f6f6c20697320656d707479000000000000000000000000005f82015250565b5f610ef9601383610d39565b9150610f0482610ec5565b602082019050919050565b5f6020820190508181035f830152610f2681610eed565b9050919050565b5f819050919050565b610f47610f4282610be6565b610f2d565b82525050565b5f8160601b9050919050565b5f610f6382610f4d565b9050919050565b5f610f7482610f59565b9050919050565b610f8c610f8782610c6c565b610f6a565b82525050565b5f610f9d8286610f36565b602082019150610fad8285610f36565b602082019150610fbd8284610f7b565b601482019150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61100582610be6565b915061101083610be6565b9250826110205761101f610fce565b5b828206905092915050565b5f61103582610be6565b915061104083610be6565b9250826110505761104f610fce565b5b828204905092915050565b5f61106582610be6565b915061107083610be6565b925082820261107e81610be6565b9150828204841483151761109557611094610dd7565b5b5092915050565b7f4e6f7420656e6f75676820435a3420696e207072697a6520706f6f6c000000005f82015250565b5f6110d0601c83610d39565b91506110db8261109c565b602082019050919050565b5f6020820190508181035f8301526110fd816110c4565b9050919050565b5f61110e82610be6565b915061111983610be6565b925082820390508181111561113157611130610dd7565b5b92915050565b5f60408201905061114a5f830185610c44565b6111576020830184610c44565b9392505050565b5f6040820190506111715f830185610c7d565b61117e6020830184610c44565b9392505050565b5f6060820190506111985f830186610c7d565b6111a56020830185610c7d565b6111b26040830184610c44565b94935050505056fea264697066735822122002dd75bba71c59916e82e7ee054cb13b51c652066503c2981b82a3f558cc5fca64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x14CF CODESIZE SUB DUP1 PUSH2 0x14CF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH20 0x50DD541AD540D046E5822A1D5440060D58776EA6 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2D2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B DUP3 PUSH2 0x212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x231 JUMP JUMPDEST DUP2 EQ PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x266 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0x20E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28F DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0 DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CC PUSH0 DUP4 ADD DUP5 PUSH2 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11F0 DUP1 PUSH2 0x2DF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x79D4964F EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B8 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x1E1A6E6E EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x2A050024 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x44A88070 EQ PUSH2 0xFC JUMPI PUSH2 0x90 JUMP JUMPDEST CALLDATASIZE PUSH2 0x90 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x864 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x287 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x323 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x359 PUSH2 0x7B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x3F8 PUSH2 0x3B0 PUSH2 0x7B9 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x455 JUMPI PUSH2 0x454 PUSH2 0x40C PUSH2 0x7B9 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x462 PUSH2 0x864 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F2 CALLER ADDRESS DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x96A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x7E4809669D29D4F60FC52CDC899FF62C77B16C6A3893532C483386AFA590A271 DUP2 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x571 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x57A PUSH0 PUSH2 0x9EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 SLOAD GT PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FF SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x656 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x96A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x5 TIMESTAMP PREVRANDAO CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x670 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0x692 SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH2 0x69C SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH3 0xF4240 DUP5 PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x764 CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6DD63C9A34674245C3658D149FF4D640423EB11008C777A57783C3237D96FFCF DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP3 SWAP2 SWAP1 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x864 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x858 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x861 DUP2 PUSH2 0x9EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0xAAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88A PUSH2 0x7B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E9 JUMPI PUSH2 0x8AD PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x965 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x91E SWAP3 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xAB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x99F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xAB4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAEC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xB07 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB49 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB91 PUSH2 0xB8C PUSH2 0xB87 DUP5 PUSH2 0xB4F JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBA2 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBB3 DUP3 PUSH2 0xB98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0xBA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBDC PUSH0 DUP4 ADD DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC13 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC2E JUMPI PUSH2 0xC2D PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC3B DUP5 DUP3 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC66 PUSH0 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC76 DUP3 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC86 DUP2 PUSH2 0xC6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC9F PUSH0 DUP4 ADD DUP5 PUSH2 0xC7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAE DUP2 PUSH2 0xC6C JUMP JUMPDEST DUP2 EQ PUSH2 0xCB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC9 DUP2 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE4 JUMPI PUSH2 0xCE3 PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF1 DUP5 DUP3 DUP6 ADD PUSH2 0xCBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD08 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD22 PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD30 DUP5 DUP3 DUP6 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072697A6520616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDA3 PUSH1 0x26 DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xD97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE0E DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE19 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE31 JUMPI PUSH2 0xE30 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE91 PUSH1 0x28 DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9C DUP3 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEBE DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072697A6520706F6F6C20697320656D70747900000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF9 PUSH1 0x13 DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0xF04 DUP3 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF26 DUP2 PUSH2 0xEED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF47 PUSH2 0xF42 DUP3 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF63 DUP3 PUSH2 0xF4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF74 DUP3 PUSH2 0xF59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8C PUSH2 0xF87 DUP3 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xF6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF9D DUP3 DUP7 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xFAD DUP3 DUP6 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xFBD DUP3 DUP5 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1005 DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1010 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0xFCE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1035 DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1040 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1050 JUMPI PUSH2 0x104F PUSH2 0xFCE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1065 DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1070 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x107E DUP2 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820435A3420696E207072697A6520706F6F6C00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10D0 PUSH1 0x1C DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DB DUP3 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10FD DUP2 PUSH2 0x10C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x110E DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1119 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1131 JUMPI PUSH2 0x1130 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x114A PUSH0 DUP4 ADD DUP6 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x1157 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1171 PUSH0 DUP4 ADD DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x117E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP7 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x11A5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDD PUSH22 0xBBA71C59916E82E7EE054CB13B51C652066503C2981B DUP3 LOG3 CREATE2 PC 0xCC PUSH0 0xCA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "234:2508:10:-:0;;;760:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;267:42;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;858:16:10;840:8;;:35;;;;;;;;;;;;;;;;;;904:17;885:9;;:37;;;;;;;;;;;;;;;;;;760:169;;234:2508;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;234:2508:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_684": {
									"entryPoint": 2740,
									"id": 684,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2148,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_997": {
									"entryPoint": 2733,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 2540,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addPrize_1136": {
									"entryPoint": 1114,
									"id": 1136,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cz4Token_1064": {
									"entryPoint": 480,
									"id": 1064,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositFASU_1225": {
									"entryPoint": 1410,
									"id": 1225,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fasuToken_1067": {
									"entryPoint": 1348,
									"id": 1067,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1977,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@prizeAmount_1069": {
									"entryPoint": 1404,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1385,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_389": {
									"entryPoint": 2410,
									"id": 389,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_362": {
									"entryPoint": 2283,
									"id": 362,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2016,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawFunds_1299": {
									"entryPoint": 517,
									"id": 1299,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 3894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 2985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 3946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 3929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 3885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3042,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 3917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f": {
									"entryPoint": 3401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12116:11",
										"nodeType": "YulBlock",
										"src": "0:12116:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:11",
													"nodeType": "YulBlock",
													"src": "52:81:11",
													"statements": [
														{
															"nativeSrc": "62:65:11",
															"nodeType": "YulAssignment",
															"src": "62:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:11",
																		"nodeType": "YulLiteral",
																		"src": "84:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:11"
																},
																"nativeSrc": "73:54:11",
																"nodeType": "YulFunctionCall",
																"src": "73:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:126:11"
											},
											{
												"body": {
													"nativeSrc": "171:28:11",
													"nodeType": "YulBlock",
													"src": "171:28:11",
													"statements": [
														{
															"nativeSrc": "181:12:11",
															"nodeType": "YulAssignment",
															"src": "181:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:11",
																"nodeType": "YulIdentifier",
																"src": "188:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:11",
														"nodeType": "YulTypedName",
														"src": "157:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:11",
														"nodeType": "YulTypedName",
														"src": "167:3:11",
														"type": ""
													}
												],
												"src": "139:60:11"
											},
											{
												"body": {
													"nativeSrc": "265:82:11",
													"nodeType": "YulBlock",
													"src": "265:82:11",
													"statements": [
														{
															"nativeSrc": "275:66:11",
															"nodeType": "YulAssignment",
															"src": "275:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:11"
																				},
																				"nativeSrc": "315:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:11"
																		},
																		"nativeSrc": "306:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:11"
																},
																"nativeSrc": "288:53:11",
																"nodeType": "YulFunctionCall",
																"src": "288:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:11",
														"nodeType": "YulTypedName",
														"src": "245:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:11",
														"nodeType": "YulTypedName",
														"src": "255:9:11",
														"type": ""
													}
												],
												"src": "205:142:11"
											},
											{
												"body": {
													"nativeSrc": "413:66:11",
													"nodeType": "YulBlock",
													"src": "413:66:11",
													"statements": [
														{
															"nativeSrc": "423:50:11",
															"nodeType": "YulAssignment",
															"src": "423:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:11"
																},
																"nativeSrc": "436:37:11",
																"nodeType": "YulFunctionCall",
																"src": "436:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:11",
														"nodeType": "YulTypedName",
														"src": "393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:11",
														"nodeType": "YulTypedName",
														"src": "403:9:11",
														"type": ""
													}
												],
												"src": "353:126:11"
											},
											{
												"body": {
													"nativeSrc": "559:66:11",
													"nodeType": "YulBlock",
													"src": "559:66:11",
													"statements": [
														{
															"nativeSrc": "569:50:11",
															"nodeType": "YulAssignment",
															"src": "569:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:11"
																},
																"nativeSrc": "582:37:11",
																"nodeType": "YulFunctionCall",
																"src": "582:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nativeSrc": "485:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:11",
														"nodeType": "YulTypedName",
														"src": "539:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:11",
														"nodeType": "YulTypedName",
														"src": "549:9:11",
														"type": ""
													}
												],
												"src": "485:140:11"
											},
											{
												"body": {
													"nativeSrc": "710:80:11",
													"nodeType": "YulBlock",
													"src": "710:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nativeSrc": "732:44:11",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:11"
																		},
																		"nativeSrc": "732:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:11"
																},
																"nativeSrc": "720:64:11",
																"nodeType": "YulFunctionCall",
																"src": "720:64:11"
															},
															"nativeSrc": "720:64:11",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nativeSrc": "631:159:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:11",
														"nodeType": "YulTypedName",
														"src": "698:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:11",
														"nodeType": "YulTypedName",
														"src": "705:3:11",
														"type": ""
													}
												],
												"src": "631:159:11"
											},
											{
												"body": {
													"nativeSrc": "908:138:11",
													"nodeType": "YulBlock",
													"src": "908:138:11",
													"statements": [
														{
															"nativeSrc": "918:26:11",
															"nodeType": "YulAssignment",
															"src": "918:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:11",
																		"nodeType": "YulLiteral",
																		"src": "941:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:11"
																},
																"nativeSrc": "926:18:11",
																"nodeType": "YulFunctionCall",
																"src": "926:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:11"
																		},
																		"nativeSrc": "1021:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "954:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:11"
																},
																"nativeSrc": "954:85:11",
																"nodeType": "YulFunctionCall",
																"src": "954:85:11"
															},
															"nativeSrc": "954:85:11",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:11",
														"nodeType": "YulTypedName",
														"src": "880:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:11",
														"nodeType": "YulTypedName",
														"src": "892:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:11",
														"nodeType": "YulTypedName",
														"src": "903:4:11",
														"type": ""
													}
												],
												"src": "796:250:11"
											},
											{
												"body": {
													"nativeSrc": "1092:35:11",
													"nodeType": "YulBlock",
													"src": "1092:35:11",
													"statements": [
														{
															"nativeSrc": "1102:19:11",
															"nodeType": "YulAssignment",
															"src": "1102:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:11"
																},
																"nativeSrc": "1112:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:11",
														"nodeType": "YulTypedName",
														"src": "1085:6:11",
														"type": ""
													}
												],
												"src": "1052:75:11"
											},
											{
												"body": {
													"nativeSrc": "1222:28:11",
													"nodeType": "YulBlock",
													"src": "1222:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:11"
																},
																"nativeSrc": "1232:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:11"
															},
															"nativeSrc": "1232:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:11"
											},
											{
												"body": {
													"nativeSrc": "1345:28:11",
													"nodeType": "YulBlock",
													"src": "1345:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:11"
																},
																"nativeSrc": "1355:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:11"
															},
															"nativeSrc": "1355:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:11"
											},
											{
												"body": {
													"nativeSrc": "1424:32:11",
													"nodeType": "YulBlock",
													"src": "1424:32:11",
													"statements": [
														{
															"nativeSrc": "1434:16:11",
															"nodeType": "YulAssignment",
															"src": "1434:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1445:5:11",
																"nodeType": "YulIdentifier",
																"src": "1445:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1379:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:11",
														"nodeType": "YulTypedName",
														"src": "1406:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:11",
														"nodeType": "YulTypedName",
														"src": "1416:7:11",
														"type": ""
													}
												],
												"src": "1379:77:11"
											},
											{
												"body": {
													"nativeSrc": "1505:79:11",
													"nodeType": "YulBlock",
													"src": "1505:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1562:16:11",
																"nodeType": "YulBlock",
																"src": "1562:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1571:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1571:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1574:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1574:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1564:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1564:6:11"
																			},
																			"nativeSrc": "1564:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1564:12:11"
																		},
																		"nativeSrc": "1564:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1564:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1528:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1528:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1553:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1553:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1535:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1535:17:11"
																				},
																				"nativeSrc": "1535:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1535:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1525:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1525:2:11"
																		},
																		"nativeSrc": "1525:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1525:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1518:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:11"
																},
																"nativeSrc": "1518:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1518:43:11"
															},
															"nativeSrc": "1515:63:11",
															"nodeType": "YulIf",
															"src": "1515:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1462:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1498:5:11",
														"nodeType": "YulTypedName",
														"src": "1498:5:11",
														"type": ""
													}
												],
												"src": "1462:122:11"
											},
											{
												"body": {
													"nativeSrc": "1642:87:11",
													"nodeType": "YulBlock",
													"src": "1642:87:11",
													"statements": [
														{
															"nativeSrc": "1652:29:11",
															"nodeType": "YulAssignment",
															"src": "1652:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1674:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1674:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1661:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1661:12:11"
																},
																"nativeSrc": "1661:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1661:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1652:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1652:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1717:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1717:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1690:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1690:26:11"
																},
																"nativeSrc": "1690:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1690:33:11"
															},
															"nativeSrc": "1690:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1690:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1590:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1620:6:11",
														"nodeType": "YulTypedName",
														"src": "1620:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1628:3:11",
														"nodeType": "YulTypedName",
														"src": "1628:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1636:5:11",
														"nodeType": "YulTypedName",
														"src": "1636:5:11",
														"type": ""
													}
												],
												"src": "1590:139:11"
											},
											{
												"body": {
													"nativeSrc": "1801:263:11",
													"nodeType": "YulBlock",
													"src": "1801:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1847:83:11",
																"nodeType": "YulBlock",
																"src": "1847:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1849:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1849:77:11"
																			},
																			"nativeSrc": "1849:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1849:79:11"
																		},
																		"nativeSrc": "1849:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1822:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1822:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1831:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1831:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1818:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1818:3:11"
																		},
																		"nativeSrc": "1818:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1843:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1843:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1814:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1814:3:11"
																},
																"nativeSrc": "1814:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1814:32:11"
															},
															"nativeSrc": "1811:119:11",
															"nodeType": "YulIf",
															"src": "1811:119:11"
														},
														{
															"nativeSrc": "1940:117:11",
															"nodeType": "YulBlock",
															"src": "1940:117:11",
															"statements": [
																{
																	"nativeSrc": "1955:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1955:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1969:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1959:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1959:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1984:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1984:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2019:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2019:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2030:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2030:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2015:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2015:3:11"
																				},
																				"nativeSrc": "2015:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2015:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2039:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2039:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1994:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1994:20:11"
																		},
																		"nativeSrc": "1994:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1994:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1984:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1984:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1735:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1771:9:11",
														"nodeType": "YulTypedName",
														"src": "1771:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1782:7:11",
														"nodeType": "YulTypedName",
														"src": "1782:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1794:6:11",
														"nodeType": "YulTypedName",
														"src": "1794:6:11",
														"type": ""
													}
												],
												"src": "1735:329:11"
											},
											{
												"body": {
													"nativeSrc": "2135:53:11",
													"nodeType": "YulBlock",
													"src": "2135:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2152:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2152:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2175:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2175:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2157:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2157:17:11"
																		},
																		"nativeSrc": "2157:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2145:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2145:6:11"
																},
																"nativeSrc": "2145:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2145:37:11"
															},
															"nativeSrc": "2145:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2145:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2070:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:11",
														"nodeType": "YulTypedName",
														"src": "2123:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2130:3:11",
														"nodeType": "YulTypedName",
														"src": "2130:3:11",
														"type": ""
													}
												],
												"src": "2070:118:11"
											},
											{
												"body": {
													"nativeSrc": "2292:124:11",
													"nodeType": "YulBlock",
													"src": "2292:124:11",
													"statements": [
														{
															"nativeSrc": "2302:26:11",
															"nodeType": "YulAssignment",
															"src": "2302:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2314:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2314:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2325:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2310:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:11"
																},
																"nativeSrc": "2310:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2310:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2302:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2302:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2382:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2395:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2395:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2406:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2391:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2391:3:11"
																		},
																		"nativeSrc": "2391:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2391:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2338:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2338:43:11"
																},
																"nativeSrc": "2338:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2338:71:11"
															},
															"nativeSrc": "2338:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2338:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2194:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2264:9:11",
														"nodeType": "YulTypedName",
														"src": "2264:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2276:6:11",
														"nodeType": "YulTypedName",
														"src": "2276:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2287:4:11",
														"nodeType": "YulTypedName",
														"src": "2287:4:11",
														"type": ""
													}
												],
												"src": "2194:222:11"
											},
											{
												"body": {
													"nativeSrc": "2467:51:11",
													"nodeType": "YulBlock",
													"src": "2467:51:11",
													"statements": [
														{
															"nativeSrc": "2477:35:11",
															"nodeType": "YulAssignment",
															"src": "2477:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2506:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2506:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2488:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2488:17:11"
																},
																"nativeSrc": "2488:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2488:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2477:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2477:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2422:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2449:5:11",
														"nodeType": "YulTypedName",
														"src": "2449:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2459:7:11",
														"nodeType": "YulTypedName",
														"src": "2459:7:11",
														"type": ""
													}
												],
												"src": "2422:96:11"
											},
											{
												"body": {
													"nativeSrc": "2589:53:11",
													"nodeType": "YulBlock",
													"src": "2589:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2606:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2606:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2629:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2629:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2611:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2611:17:11"
																		},
																		"nativeSrc": "2611:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2599:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:11"
																},
																"nativeSrc": "2599:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2599:37:11"
															},
															"nativeSrc": "2599:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2599:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2524:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2577:5:11",
														"nodeType": "YulTypedName",
														"src": "2577:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2584:3:11",
														"nodeType": "YulTypedName",
														"src": "2584:3:11",
														"type": ""
													}
												],
												"src": "2524:118:11"
											},
											{
												"body": {
													"nativeSrc": "2746:124:11",
													"nodeType": "YulBlock",
													"src": "2746:124:11",
													"statements": [
														{
															"nativeSrc": "2756:26:11",
															"nodeType": "YulAssignment",
															"src": "2756:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2768:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2768:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2779:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2764:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:11"
																},
																"nativeSrc": "2764:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2764:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2756:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2756:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2836:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2836:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2860:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:11"
																		},
																		"nativeSrc": "2845:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2792:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2792:43:11"
																},
																"nativeSrc": "2792:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2792:71:11"
															},
															"nativeSrc": "2792:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2792:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2648:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2718:9:11",
														"nodeType": "YulTypedName",
														"src": "2718:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2730:6:11",
														"nodeType": "YulTypedName",
														"src": "2730:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2741:4:11",
														"nodeType": "YulTypedName",
														"src": "2741:4:11",
														"type": ""
													}
												],
												"src": "2648:222:11"
											},
											{
												"body": {
													"nativeSrc": "2919:79:11",
													"nodeType": "YulBlock",
													"src": "2919:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2976:16:11",
																"nodeType": "YulBlock",
																"src": "2976:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2985:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2985:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2978:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2978:6:11"
																			},
																			"nativeSrc": "2978:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2978:12:11"
																		},
																		"nativeSrc": "2978:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2978:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2942:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2942:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2967:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2967:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2949:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2949:17:11"
																				},
																				"nativeSrc": "2949:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2949:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2939:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2939:2:11"
																		},
																		"nativeSrc": "2939:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2939:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2932:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2932:6:11"
																},
																"nativeSrc": "2932:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2932:43:11"
															},
															"nativeSrc": "2929:63:11",
															"nodeType": "YulIf",
															"src": "2929:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2876:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:11",
														"nodeType": "YulTypedName",
														"src": "2912:5:11",
														"type": ""
													}
												],
												"src": "2876:122:11"
											},
											{
												"body": {
													"nativeSrc": "3056:87:11",
													"nodeType": "YulBlock",
													"src": "3056:87:11",
													"statements": [
														{
															"nativeSrc": "3066:29:11",
															"nodeType": "YulAssignment",
															"src": "3066:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3088:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3088:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3075:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3075:12:11"
																},
																"nativeSrc": "3075:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3075:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3066:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3066:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3131:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3131:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3104:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3104:26:11"
																},
																"nativeSrc": "3104:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3104:33:11"
															},
															"nativeSrc": "3104:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3104:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3004:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3034:6:11",
														"nodeType": "YulTypedName",
														"src": "3034:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3042:3:11",
														"nodeType": "YulTypedName",
														"src": "3042:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3050:5:11",
														"nodeType": "YulTypedName",
														"src": "3050:5:11",
														"type": ""
													}
												],
												"src": "3004:139:11"
											},
											{
												"body": {
													"nativeSrc": "3215:263:11",
													"nodeType": "YulBlock",
													"src": "3215:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3261:83:11",
																"nodeType": "YulBlock",
																"src": "3261:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3263:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3263:77:11"
																			},
																			"nativeSrc": "3263:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3263:79:11"
																		},
																		"nativeSrc": "3263:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3236:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3245:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3232:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:11"
																		},
																		"nativeSrc": "3232:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3228:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:11"
																},
																"nativeSrc": "3228:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3228:32:11"
															},
															"nativeSrc": "3225:119:11",
															"nodeType": "YulIf",
															"src": "3225:119:11"
														},
														{
															"nativeSrc": "3354:117:11",
															"nodeType": "YulBlock",
															"src": "3354:117:11",
															"statements": [
																{
																	"nativeSrc": "3369:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3369:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3383:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3383:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3373:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3373:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3398:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3398:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3433:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3433:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3444:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3444:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3429:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3429:3:11"
																				},
																				"nativeSrc": "3429:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3429:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3453:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3453:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3408:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3408:20:11"
																		},
																		"nativeSrc": "3408:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3408:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3398:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3398:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3149:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3185:9:11",
														"nodeType": "YulTypedName",
														"src": "3185:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3196:7:11",
														"nodeType": "YulTypedName",
														"src": "3196:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3208:6:11",
														"nodeType": "YulTypedName",
														"src": "3208:6:11",
														"type": ""
													}
												],
												"src": "3149:329:11"
											},
											{
												"body": {
													"nativeSrc": "3547:80:11",
													"nodeType": "YulBlock",
													"src": "3547:80:11",
													"statements": [
														{
															"nativeSrc": "3557:22:11",
															"nodeType": "YulAssignment",
															"src": "3557:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3572:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3572:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3566:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3566:5:11"
																},
																"nativeSrc": "3566:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3566:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3557:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3557:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3615:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3615:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3588:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3588:26:11"
																},
																"nativeSrc": "3588:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3588:33:11"
															},
															"nativeSrc": "3588:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3588:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3484:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3525:6:11",
														"nodeType": "YulTypedName",
														"src": "3525:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3533:3:11",
														"nodeType": "YulTypedName",
														"src": "3533:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3541:5:11",
														"nodeType": "YulTypedName",
														"src": "3541:5:11",
														"type": ""
													}
												],
												"src": "3484:143:11"
											},
											{
												"body": {
													"nativeSrc": "3710:274:11",
													"nodeType": "YulBlock",
													"src": "3710:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3756:83:11",
																"nodeType": "YulBlock",
																"src": "3756:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3758:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3758:77:11"
																			},
																			"nativeSrc": "3758:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3758:79:11"
																		},
																		"nativeSrc": "3758:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3758:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3731:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3731:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3740:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3740:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3727:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3727:3:11"
																		},
																		"nativeSrc": "3727:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3752:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3752:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3723:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3723:3:11"
																},
																"nativeSrc": "3723:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3723:32:11"
															},
															"nativeSrc": "3720:119:11",
															"nodeType": "YulIf",
															"src": "3720:119:11"
														},
														{
															"nativeSrc": "3849:128:11",
															"nodeType": "YulBlock",
															"src": "3849:128:11",
															"statements": [
																{
																	"nativeSrc": "3864:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3864:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3878:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3878:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3868:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3868:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3893:74:11",
																	"nodeType": "YulAssignment",
																	"src": "3893:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3939:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3939:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3950:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3950:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3935:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3935:3:11"
																				},
																				"nativeSrc": "3935:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3935:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3959:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3959:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3903:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "3903:31:11"
																		},
																		"nativeSrc": "3903:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3903:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3893:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3893:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3633:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3680:9:11",
														"nodeType": "YulTypedName",
														"src": "3680:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3691:7:11",
														"nodeType": "YulTypedName",
														"src": "3691:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3703:6:11",
														"nodeType": "YulTypedName",
														"src": "3703:6:11",
														"type": ""
													}
												],
												"src": "3633:351:11"
											},
											{
												"body": {
													"nativeSrc": "4086:73:11",
													"nodeType": "YulBlock",
													"src": "4086:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4103:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4103:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4108:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4108:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4096:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4096:6:11"
																},
																"nativeSrc": "4096:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4096:19:11"
															},
															"nativeSrc": "4096:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "4096:19:11"
														},
														{
															"nativeSrc": "4124:29:11",
															"nodeType": "YulAssignment",
															"src": "4124:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4143:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4143:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4148:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4148:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4139:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:11"
																},
																"nativeSrc": "4139:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4139:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4124:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "4124:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3990:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4058:3:11",
														"nodeType": "YulTypedName",
														"src": "4058:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4063:6:11",
														"nodeType": "YulTypedName",
														"src": "4063:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4074:11:11",
														"nodeType": "YulTypedName",
														"src": "4074:11:11",
														"type": ""
													}
												],
												"src": "3990:169:11"
											},
											{
												"body": {
													"nativeSrc": "4271:119:11",
													"nodeType": "YulBlock",
													"src": "4271:119:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4293:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4293:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4301:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4301:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4289:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4289:3:11"
																		},
																		"nativeSrc": "4289:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4289:14:11"
																	},
																	{
																		"hexValue": "5072697a6520616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "4305:34:11",
																		"nodeType": "YulLiteral",
																		"src": "4305:34:11",
																		"type": "",
																		"value": "Prize amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4282:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4282:6:11"
																},
																"nativeSrc": "4282:58:11",
																"nodeType": "YulFunctionCall",
																"src": "4282:58:11"
															},
															"nativeSrc": "4282:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "4282:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4361:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4361:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4369:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4369:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:11"
																		},
																		"nativeSrc": "4357:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4357:15:11"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nativeSrc": "4374:8:11",
																		"nodeType": "YulLiteral",
																		"src": "4374:8:11",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4350:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4350:6:11"
																},
																"nativeSrc": "4350:33:11",
																"nodeType": "YulFunctionCall",
																"src": "4350:33:11"
															},
															"nativeSrc": "4350:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "4350:33:11"
														}
													]
												},
												"name": "store_literal_in_memory_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f",
												"nativeSrc": "4165:225:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4263:6:11",
														"nodeType": "YulTypedName",
														"src": "4263:6:11",
														"type": ""
													}
												],
												"src": "4165:225:11"
											},
											{
												"body": {
													"nativeSrc": "4542:220:11",
													"nodeType": "YulBlock",
													"src": "4542:220:11",
													"statements": [
														{
															"nativeSrc": "4552:74:11",
															"nodeType": "YulAssignment",
															"src": "4552:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4618:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4618:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4623:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4623:2:11",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4559:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "4559:58:11"
																},
																"nativeSrc": "4559:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4559:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4552:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4552:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4724:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4724:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f",
																	"nativeSrc": "4635:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "4635:88:11"
																},
																"nativeSrc": "4635:93:11",
																"nodeType": "YulFunctionCall",
																"src": "4635:93:11"
															},
															"nativeSrc": "4635:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "4635:93:11"
														},
														{
															"nativeSrc": "4737:19:11",
															"nodeType": "YulAssignment",
															"src": "4737:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4748:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4748:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4753:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4753:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4744:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4744:3:11"
																},
																"nativeSrc": "4744:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4744:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4737:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4737:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4396:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4530:3:11",
														"nodeType": "YulTypedName",
														"src": "4530:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4538:3:11",
														"nodeType": "YulTypedName",
														"src": "4538:3:11",
														"type": ""
													}
												],
												"src": "4396:366:11"
											},
											{
												"body": {
													"nativeSrc": "4939:248:11",
													"nodeType": "YulBlock",
													"src": "4939:248:11",
													"statements": [
														{
															"nativeSrc": "4949:26:11",
															"nodeType": "YulAssignment",
															"src": "4949:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4961:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4961:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4972:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4972:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4957:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:11"
																},
																"nativeSrc": "4957:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4957:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4949:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4949:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4996:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4996:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5007:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5007:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4992:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4992:3:11"
																		},
																		"nativeSrc": "4992:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4992:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5015:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5015:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5021:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5021:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5011:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:11"
																		},
																		"nativeSrc": "5011:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5011:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4985:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4985:6:11"
																},
																"nativeSrc": "4985:47:11",
																"nodeType": "YulFunctionCall",
																"src": "4985:47:11"
															},
															"nativeSrc": "4985:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "4985:47:11"
														},
														{
															"nativeSrc": "5041:139:11",
															"nodeType": "YulAssignment",
															"src": "5041:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5175:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5175:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5049:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "5049:124:11"
																},
																"nativeSrc": "5049:131:11",
																"nodeType": "YulFunctionCall",
																"src": "5049:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5041:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5041:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4768:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4919:9:11",
														"nodeType": "YulTypedName",
														"src": "4919:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4934:4:11",
														"nodeType": "YulTypedName",
														"src": "4934:4:11",
														"type": ""
													}
												],
												"src": "4768:419:11"
											},
											{
												"body": {
													"nativeSrc": "5221:152:11",
													"nodeType": "YulBlock",
													"src": "5221:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5238:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5238:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5241:77:11",
																		"nodeType": "YulLiteral",
																		"src": "5241:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5231:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5231:6:11"
																},
																"nativeSrc": "5231:88:11",
																"nodeType": "YulFunctionCall",
																"src": "5231:88:11"
															},
															"nativeSrc": "5231:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "5231:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5335:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5335:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5338:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5328:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:11"
																},
																"nativeSrc": "5328:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5328:15:11"
															},
															"nativeSrc": "5328:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5328:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5359:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5359:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5362:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5362:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5352:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:11"
																},
																"nativeSrc": "5352:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5352:15:11"
															},
															"nativeSrc": "5352:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5352:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5193:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5193:180:11"
											},
											{
												"body": {
													"nativeSrc": "5423:147:11",
													"nodeType": "YulBlock",
													"src": "5423:147:11",
													"statements": [
														{
															"nativeSrc": "5433:25:11",
															"nodeType": "YulAssignment",
															"src": "5433:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5456:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5456:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5438:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5438:17:11"
																},
																"nativeSrc": "5438:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5438:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5433:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5433:1:11"
																}
															]
														},
														{
															"nativeSrc": "5467:25:11",
															"nodeType": "YulAssignment",
															"src": "5467:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5490:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5490:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5472:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5472:17:11"
																},
																"nativeSrc": "5472:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5472:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5467:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5467:1:11"
																}
															]
														},
														{
															"nativeSrc": "5501:16:11",
															"nodeType": "YulAssignment",
															"src": "5501:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5512:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5512:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5515:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5515:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:11"
																},
																"nativeSrc": "5508:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5508:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5501:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5501:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5541:22:11",
																"nodeType": "YulBlock",
																"src": "5541:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5543:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5543:16:11"
																			},
																			"nativeSrc": "5543:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:18:11"
																		},
																		"nativeSrc": "5543:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5533:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5533:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5536:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5536:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5530:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5530:2:11"
																},
																"nativeSrc": "5530:10:11",
																"nodeType": "YulFunctionCall",
																"src": "5530:10:11"
															},
															"nativeSrc": "5527:36:11",
															"nodeType": "YulIf",
															"src": "5527:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5379:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5410:1:11",
														"nodeType": "YulTypedName",
														"src": "5410:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5413:1:11",
														"nodeType": "YulTypedName",
														"src": "5413:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5419:3:11",
														"nodeType": "YulTypedName",
														"src": "5419:3:11",
														"type": ""
													}
												],
												"src": "5379:191:11"
											},
											{
												"body": {
													"nativeSrc": "5682:121:11",
													"nodeType": "YulBlock",
													"src": "5682:121:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5704:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5704:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5712:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5712:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5700:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:11"
																		},
																		"nativeSrc": "5700:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:14:11"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "5716:34:11",
																		"nodeType": "YulLiteral",
																		"src": "5716:34:11",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5693:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5693:6:11"
																},
																"nativeSrc": "5693:58:11",
																"nodeType": "YulFunctionCall",
																"src": "5693:58:11"
															},
															"nativeSrc": "5693:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "5693:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5772:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5772:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5780:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5780:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5768:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5768:3:11"
																		},
																		"nativeSrc": "5768:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5768:15:11"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "5785:10:11",
																		"nodeType": "YulLiteral",
																		"src": "5785:10:11",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5761:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5761:6:11"
																},
																"nativeSrc": "5761:35:11",
																"nodeType": "YulFunctionCall",
																"src": "5761:35:11"
															},
															"nativeSrc": "5761:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "5761:35:11"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nativeSrc": "5576:227:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5674:6:11",
														"nodeType": "YulTypedName",
														"src": "5674:6:11",
														"type": ""
													}
												],
												"src": "5576:227:11"
											},
											{
												"body": {
													"nativeSrc": "5955:220:11",
													"nodeType": "YulBlock",
													"src": "5955:220:11",
													"statements": [
														{
															"nativeSrc": "5965:74:11",
															"nodeType": "YulAssignment",
															"src": "5965:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6031:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6031:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6036:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6036:2:11",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5972:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "5972:58:11"
																},
																"nativeSrc": "5972:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5972:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5965:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5965:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6137:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6137:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nativeSrc": "6048:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6048:88:11"
																},
																"nativeSrc": "6048:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6048:93:11"
															},
															"nativeSrc": "6048:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6048:93:11"
														},
														{
															"nativeSrc": "6150:19:11",
															"nodeType": "YulAssignment",
															"src": "6150:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6161:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6161:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6166:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6166:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6157:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6157:3:11"
																},
																"nativeSrc": "6157:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6157:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6150:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6150:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5809:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5943:3:11",
														"nodeType": "YulTypedName",
														"src": "5943:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5951:3:11",
														"nodeType": "YulTypedName",
														"src": "5951:3:11",
														"type": ""
													}
												],
												"src": "5809:366:11"
											},
											{
												"body": {
													"nativeSrc": "6352:248:11",
													"nodeType": "YulBlock",
													"src": "6352:248:11",
													"statements": [
														{
															"nativeSrc": "6362:26:11",
															"nodeType": "YulAssignment",
															"src": "6362:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6374:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6374:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6385:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6385:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6370:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6370:3:11"
																},
																"nativeSrc": "6370:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6370:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6362:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6362:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6409:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6409:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6420:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6420:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6405:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6405:3:11"
																		},
																		"nativeSrc": "6405:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6405:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6428:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6428:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6434:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6434:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6424:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6424:3:11"
																		},
																		"nativeSrc": "6424:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6424:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6398:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:11"
																},
																"nativeSrc": "6398:47:11",
																"nodeType": "YulFunctionCall",
																"src": "6398:47:11"
															},
															"nativeSrc": "6398:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "6398:47:11"
														},
														{
															"nativeSrc": "6454:139:11",
															"nodeType": "YulAssignment",
															"src": "6454:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6588:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6588:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6462:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "6462:124:11"
																},
																"nativeSrc": "6462:131:11",
																"nodeType": "YulFunctionCall",
																"src": "6462:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6454:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6454:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6181:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6332:9:11",
														"nodeType": "YulTypedName",
														"src": "6332:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6347:4:11",
														"nodeType": "YulTypedName",
														"src": "6347:4:11",
														"type": ""
													}
												],
												"src": "6181:419:11"
											},
											{
												"body": {
													"nativeSrc": "6712:63:11",
													"nodeType": "YulBlock",
													"src": "6712:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6734:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6734:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6742:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6742:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6730:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6730:3:11"
																		},
																		"nativeSrc": "6730:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6730:14:11"
																	},
																	{
																		"hexValue": "5072697a6520706f6f6c20697320656d707479",
																		"kind": "string",
																		"nativeSrc": "6746:21:11",
																		"nodeType": "YulLiteral",
																		"src": "6746:21:11",
																		"type": "",
																		"value": "Prize pool is empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6723:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6723:6:11"
																},
																"nativeSrc": "6723:45:11",
																"nodeType": "YulFunctionCall",
																"src": "6723:45:11"
															},
															"nativeSrc": "6723:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "6723:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9",
												"nativeSrc": "6606:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6704:6:11",
														"nodeType": "YulTypedName",
														"src": "6704:6:11",
														"type": ""
													}
												],
												"src": "6606:169:11"
											},
											{
												"body": {
													"nativeSrc": "6927:220:11",
													"nodeType": "YulBlock",
													"src": "6927:220:11",
													"statements": [
														{
															"nativeSrc": "6937:74:11",
															"nodeType": "YulAssignment",
															"src": "6937:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7003:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7003:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7008:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7008:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6944:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6944:58:11"
																},
																"nativeSrc": "6944:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6944:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6937:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6937:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7109:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7109:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9",
																	"nativeSrc": "7020:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7020:88:11"
																},
																"nativeSrc": "7020:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7020:93:11"
															},
															"nativeSrc": "7020:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7020:93:11"
														},
														{
															"nativeSrc": "7122:19:11",
															"nodeType": "YulAssignment",
															"src": "7122:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7133:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7133:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7138:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7138:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7129:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7129:3:11"
																},
																"nativeSrc": "7129:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7129:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7122:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6781:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6915:3:11",
														"nodeType": "YulTypedName",
														"src": "6915:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6923:3:11",
														"nodeType": "YulTypedName",
														"src": "6923:3:11",
														"type": ""
													}
												],
												"src": "6781:366:11"
											},
											{
												"body": {
													"nativeSrc": "7324:248:11",
													"nodeType": "YulBlock",
													"src": "7324:248:11",
													"statements": [
														{
															"nativeSrc": "7334:26:11",
															"nodeType": "YulAssignment",
															"src": "7334:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7346:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7346:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7357:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7357:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7342:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:11"
																},
																"nativeSrc": "7342:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7342:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7334:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7334:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7381:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7392:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7392:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7377:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:11"
																		},
																		"nativeSrc": "7377:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7400:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7400:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7406:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7396:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7396:3:11"
																		},
																		"nativeSrc": "7396:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7396:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7370:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:11"
																},
																"nativeSrc": "7370:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7370:47:11"
															},
															"nativeSrc": "7370:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7370:47:11"
														},
														{
															"nativeSrc": "7426:139:11",
															"nodeType": "YulAssignment",
															"src": "7426:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7560:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7560:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7434:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7434:124:11"
																},
																"nativeSrc": "7434:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7434:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7426:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7426:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7153:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7304:9:11",
														"nodeType": "YulTypedName",
														"src": "7304:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7319:4:11",
														"nodeType": "YulTypedName",
														"src": "7319:4:11",
														"type": ""
													}
												],
												"src": "7153:419:11"
											},
											{
												"body": {
													"nativeSrc": "7625:32:11",
													"nodeType": "YulBlock",
													"src": "7625:32:11",
													"statements": [
														{
															"nativeSrc": "7635:16:11",
															"nodeType": "YulAssignment",
															"src": "7635:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "7646:5:11",
																"nodeType": "YulIdentifier",
																"src": "7646:5:11"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "7635:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7635:7:11"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "7578:79:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7607:5:11",
														"nodeType": "YulTypedName",
														"src": "7607:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "7617:7:11",
														"nodeType": "YulTypedName",
														"src": "7617:7:11",
														"type": ""
													}
												],
												"src": "7578:79:11"
											},
											{
												"body": {
													"nativeSrc": "7746:74:11",
													"nodeType": "YulBlock",
													"src": "7746:74:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7763:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7806:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7806:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7788:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "7788:17:11"
																				},
																				"nativeSrc": "7788:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7788:24:11"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "7768:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "7768:19:11"
																		},
																		"nativeSrc": "7768:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7768:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7756:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7756:6:11"
																},
																"nativeSrc": "7756:58:11",
																"nodeType": "YulFunctionCall",
																"src": "7756:58:11"
															},
															"nativeSrc": "7756:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "7756:58:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "7663:157:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7734:5:11",
														"nodeType": "YulTypedName",
														"src": "7734:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7741:3:11",
														"nodeType": "YulTypedName",
														"src": "7741:3:11",
														"type": ""
													}
												],
												"src": "7663:157:11"
											},
											{
												"body": {
													"nativeSrc": "7868:52:11",
													"nodeType": "YulBlock",
													"src": "7868:52:11",
													"statements": [
														{
															"nativeSrc": "7878:35:11",
															"nodeType": "YulAssignment",
															"src": "7878:35:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7903:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7903:2:11",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7907:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7907:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "7899:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7899:3:11"
																},
																"nativeSrc": "7899:14:11",
																"nodeType": "YulFunctionCall",
																"src": "7899:14:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7878:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "7878:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "7826:94:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7849:5:11",
														"nodeType": "YulTypedName",
														"src": "7849:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7859:8:11",
														"nodeType": "YulTypedName",
														"src": "7859:8:11",
														"type": ""
													}
												],
												"src": "7826:94:11"
											},
											{
												"body": {
													"nativeSrc": "7973:47:11",
													"nodeType": "YulBlock",
													"src": "7973:47:11",
													"statements": [
														{
															"nativeSrc": "7983:31:11",
															"nodeType": "YulAssignment",
															"src": "7983:31:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8008:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8008:5:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "7994:13:11",
																	"nodeType": "YulIdentifier",
																	"src": "7994:13:11"
																},
																"nativeSrc": "7994:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7994:20:11"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "7983:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7983:7:11"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "7926:94:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7955:5:11",
														"nodeType": "YulTypedName",
														"src": "7955:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "7965:7:11",
														"nodeType": "YulTypedName",
														"src": "7965:7:11",
														"type": ""
													}
												],
												"src": "7926:94:11"
											},
											{
												"body": {
													"nativeSrc": "8073:53:11",
													"nodeType": "YulBlock",
													"src": "8073:53:11",
													"statements": [
														{
															"nativeSrc": "8083:37:11",
															"nodeType": "YulAssignment",
															"src": "8083:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8114:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8114:5:11"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "8094:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "8094:19:11"
																},
																"nativeSrc": "8094:26:11",
																"nodeType": "YulFunctionCall",
																"src": "8094:26:11"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "8083:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "8083:7:11"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "8026:100:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8055:5:11",
														"nodeType": "YulTypedName",
														"src": "8055:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "8065:7:11",
														"nodeType": "YulTypedName",
														"src": "8065:7:11",
														"type": ""
													}
												],
												"src": "8026:100:11"
											},
											{
												"body": {
													"nativeSrc": "8215:74:11",
													"nodeType": "YulBlock",
													"src": "8215:74:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8232:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8232:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8275:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "8275:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "8257:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "8257:17:11"
																				},
																				"nativeSrc": "8257:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8257:24:11"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "8237:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "8237:19:11"
																		},
																		"nativeSrc": "8237:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8237:45:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8225:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8225:6:11"
																},
																"nativeSrc": "8225:58:11",
																"nodeType": "YulFunctionCall",
																"src": "8225:58:11"
															},
															"nativeSrc": "8225:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "8225:58:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "8132:157:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8203:5:11",
														"nodeType": "YulTypedName",
														"src": "8203:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8210:3:11",
														"nodeType": "YulTypedName",
														"src": "8210:3:11",
														"type": ""
													}
												],
												"src": "8132:157:11"
											},
											{
												"body": {
													"nativeSrc": "8467:366:11",
													"nodeType": "YulBlock",
													"src": "8467:366:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8540:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8540:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8549:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8549:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "8478:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "8478:61:11"
																},
																"nativeSrc": "8478:75:11",
																"nodeType": "YulFunctionCall",
																"src": "8478:75:11"
															},
															"nativeSrc": "8478:75:11",
															"nodeType": "YulExpressionStatement",
															"src": "8478:75:11"
														},
														{
															"nativeSrc": "8562:19:11",
															"nodeType": "YulAssignment",
															"src": "8562:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8573:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8573:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8578:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8578:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8569:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:11"
																},
																"nativeSrc": "8569:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8569:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8562:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8562:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8653:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8653:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8662:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8662:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "8591:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "8591:61:11"
																},
																"nativeSrc": "8591:75:11",
																"nodeType": "YulFunctionCall",
																"src": "8591:75:11"
															},
															"nativeSrc": "8591:75:11",
															"nodeType": "YulExpressionStatement",
															"src": "8591:75:11"
														},
														{
															"nativeSrc": "8675:19:11",
															"nodeType": "YulAssignment",
															"src": "8675:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8686:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8686:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8691:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8691:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8682:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8682:3:11"
																},
																"nativeSrc": "8682:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8682:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8675:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8675:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8766:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8766:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8775:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8775:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "8704:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "8704:61:11"
																},
																"nativeSrc": "8704:75:11",
																"nodeType": "YulFunctionCall",
																"src": "8704:75:11"
															},
															"nativeSrc": "8704:75:11",
															"nodeType": "YulExpressionStatement",
															"src": "8704:75:11"
														},
														{
															"nativeSrc": "8788:19:11",
															"nodeType": "YulAssignment",
															"src": "8788:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8799:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8799:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8804:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8804:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8795:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8795:3:11"
																},
																"nativeSrc": "8795:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8795:12:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8788:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8788:3:11"
																}
															]
														},
														{
															"nativeSrc": "8817:10:11",
															"nodeType": "YulAssignment",
															"src": "8817:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "8824:3:11",
																"nodeType": "YulIdentifier",
																"src": "8824:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8817:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8817:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8295:538:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8430:3:11",
														"nodeType": "YulTypedName",
														"src": "8430:3:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8436:6:11",
														"nodeType": "YulTypedName",
														"src": "8436:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8444:6:11",
														"nodeType": "YulTypedName",
														"src": "8444:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8452:6:11",
														"nodeType": "YulTypedName",
														"src": "8452:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8463:3:11",
														"nodeType": "YulTypedName",
														"src": "8463:3:11",
														"type": ""
													}
												],
												"src": "8295:538:11"
											},
											{
												"body": {
													"nativeSrc": "8867:152:11",
													"nodeType": "YulBlock",
													"src": "8867:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8884:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8884:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8887:77:11",
																		"nodeType": "YulLiteral",
																		"src": "8887:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8877:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8877:6:11"
																},
																"nativeSrc": "8877:88:11",
																"nodeType": "YulFunctionCall",
																"src": "8877:88:11"
															},
															"nativeSrc": "8877:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "8877:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8981:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8981:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8984:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8984:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8974:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8974:6:11"
																},
																"nativeSrc": "8974:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8974:15:11"
															},
															"nativeSrc": "8974:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8974:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9005:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9005:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9008:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9008:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8998:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8998:6:11"
																},
																"nativeSrc": "8998:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8998:15:11"
															},
															"nativeSrc": "8998:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8998:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8839:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8839:180:11"
											},
											{
												"body": {
													"nativeSrc": "9059:142:11",
													"nodeType": "YulBlock",
													"src": "9059:142:11",
													"statements": [
														{
															"nativeSrc": "9069:25:11",
															"nodeType": "YulAssignment",
															"src": "9069:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9092:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9092:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9074:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9074:17:11"
																},
																"nativeSrc": "9074:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9074:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9069:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9069:1:11"
																}
															]
														},
														{
															"nativeSrc": "9103:25:11",
															"nodeType": "YulAssignment",
															"src": "9103:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9126:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9126:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9108:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9108:17:11"
																},
																"nativeSrc": "9108:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9108:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9103:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9103:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9150:22:11",
																"nodeType": "YulBlock",
																"src": "9150:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9152:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9152:16:11"
																			},
																			"nativeSrc": "9152:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9152:18:11"
																		},
																		"nativeSrc": "9152:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9152:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9147:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9147:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9140:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9140:6:11"
																},
																"nativeSrc": "9140:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9140:9:11"
															},
															"nativeSrc": "9137:35:11",
															"nodeType": "YulIf",
															"src": "9137:35:11"
														},
														{
															"nativeSrc": "9181:14:11",
															"nodeType": "YulAssignment",
															"src": "9181:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9190:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9190:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9193:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9193:1:11"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "9186:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:11"
																},
																"nativeSrc": "9186:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9186:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9181:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9181:1:11"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "9025:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9048:1:11",
														"nodeType": "YulTypedName",
														"src": "9048:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9051:1:11",
														"nodeType": "YulTypedName",
														"src": "9051:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9057:1:11",
														"nodeType": "YulTypedName",
														"src": "9057:1:11",
														"type": ""
													}
												],
												"src": "9025:176:11"
											},
											{
												"body": {
													"nativeSrc": "9249:143:11",
													"nodeType": "YulBlock",
													"src": "9249:143:11",
													"statements": [
														{
															"nativeSrc": "9259:25:11",
															"nodeType": "YulAssignment",
															"src": "9259:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9282:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9282:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9264:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9264:17:11"
																},
																"nativeSrc": "9264:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9264:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9259:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9259:1:11"
																}
															]
														},
														{
															"nativeSrc": "9293:25:11",
															"nodeType": "YulAssignment",
															"src": "9293:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9316:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9316:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9298:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9298:17:11"
																},
																"nativeSrc": "9298:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9298:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9293:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9293:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9340:22:11",
																"nodeType": "YulBlock",
																"src": "9340:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9342:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9342:16:11"
																			},
																			"nativeSrc": "9342:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9342:18:11"
																		},
																		"nativeSrc": "9342:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9342:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9337:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9337:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9330:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9330:6:11"
																},
																"nativeSrc": "9330:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9330:9:11"
															},
															"nativeSrc": "9327:35:11",
															"nodeType": "YulIf",
															"src": "9327:35:11"
														},
														{
															"nativeSrc": "9372:14:11",
															"nodeType": "YulAssignment",
															"src": "9372:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9381:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9381:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9384:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9384:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9377:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:11"
																},
																"nativeSrc": "9377:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9377:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9372:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9372:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9207:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9238:1:11",
														"nodeType": "YulTypedName",
														"src": "9238:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9241:1:11",
														"nodeType": "YulTypedName",
														"src": "9241:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9247:1:11",
														"nodeType": "YulTypedName",
														"src": "9247:1:11",
														"type": ""
													}
												],
												"src": "9207:185:11"
											},
											{
												"body": {
													"nativeSrc": "9446:362:11",
													"nodeType": "YulBlock",
													"src": "9446:362:11",
													"statements": [
														{
															"nativeSrc": "9456:25:11",
															"nodeType": "YulAssignment",
															"src": "9456:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9479:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9479:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9461:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9461:17:11"
																},
																"nativeSrc": "9461:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9461:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9456:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9456:1:11"
																}
															]
														},
														{
															"nativeSrc": "9490:25:11",
															"nodeType": "YulAssignment",
															"src": "9490:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9513:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9513:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9495:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9495:17:11"
																},
																"nativeSrc": "9495:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9495:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9490:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9490:1:11"
																}
															]
														},
														{
															"nativeSrc": "9524:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9524:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9547:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9547:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9550:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9550:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9543:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9543:3:11"
																},
																"nativeSrc": "9543:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9543:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9528:11:11",
																	"nodeType": "YulTypedName",
																	"src": "9528:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9561:41:11",
															"nodeType": "YulAssignment",
															"src": "9561:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9590:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "9590:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9572:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9572:17:11"
																},
																"nativeSrc": "9572:30:11",
																"nodeType": "YulFunctionCall",
																"src": "9572:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9561:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "9561:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9779:22:11",
																"nodeType": "YulBlock",
																"src": "9779:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9781:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9781:16:11"
																			},
																			"nativeSrc": "9781:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9781:18:11"
																		},
																		"nativeSrc": "9781:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9781:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9712:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "9712:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9705:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "9705:6:11"
																				},
																				"nativeSrc": "9705:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9705:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9735:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "9735:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9742:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "9742:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9751:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "9751:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9738:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9738:3:11"
																						},
																						"nativeSrc": "9738:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9738:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9732:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "9732:2:11"
																				},
																				"nativeSrc": "9732:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9732:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9685:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "9685:2:11"
																		},
																		"nativeSrc": "9685:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9685:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9665:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9665:6:11"
																},
																"nativeSrc": "9665:113:11",
																"nodeType": "YulFunctionCall",
																"src": "9665:113:11"
															},
															"nativeSrc": "9662:139:11",
															"nodeType": "YulIf",
															"src": "9662:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9398:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9429:1:11",
														"nodeType": "YulTypedName",
														"src": "9429:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9432:1:11",
														"nodeType": "YulTypedName",
														"src": "9432:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9438:7:11",
														"nodeType": "YulTypedName",
														"src": "9438:7:11",
														"type": ""
													}
												],
												"src": "9398:410:11"
											},
											{
												"body": {
													"nativeSrc": "9920:72:11",
													"nodeType": "YulBlock",
													"src": "9920:72:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9942:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9942:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9950:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9950:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9938:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9938:3:11"
																		},
																		"nativeSrc": "9938:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9938:14:11"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820435a3420696e207072697a6520706f6f6c",
																		"kind": "string",
																		"nativeSrc": "9954:30:11",
																		"nodeType": "YulLiteral",
																		"src": "9954:30:11",
																		"type": "",
																		"value": "Not enough CZ4 in prize pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9931:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9931:6:11"
																},
																"nativeSrc": "9931:54:11",
																"nodeType": "YulFunctionCall",
																"src": "9931:54:11"
															},
															"nativeSrc": "9931:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "9931:54:11"
														}
													]
												},
												"name": "store_literal_in_memory_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca",
												"nativeSrc": "9814:178:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9912:6:11",
														"nodeType": "YulTypedName",
														"src": "9912:6:11",
														"type": ""
													}
												],
												"src": "9814:178:11"
											},
											{
												"body": {
													"nativeSrc": "10144:220:11",
													"nodeType": "YulBlock",
													"src": "10144:220:11",
													"statements": [
														{
															"nativeSrc": "10154:74:11",
															"nodeType": "YulAssignment",
															"src": "10154:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10220:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10220:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10225:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10225:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10161:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10161:58:11"
																},
																"nativeSrc": "10161:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10161:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10154:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10154:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10326:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10326:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca",
																	"nativeSrc": "10237:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10237:88:11"
																},
																"nativeSrc": "10237:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10237:93:11"
															},
															"nativeSrc": "10237:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10237:93:11"
														},
														{
															"nativeSrc": "10339:19:11",
															"nodeType": "YulAssignment",
															"src": "10339:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10350:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10350:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10355:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10355:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10346:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:11"
																},
																"nativeSrc": "10346:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10346:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10339:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10339:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9998:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10132:3:11",
														"nodeType": "YulTypedName",
														"src": "10132:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10140:3:11",
														"nodeType": "YulTypedName",
														"src": "10140:3:11",
														"type": ""
													}
												],
												"src": "9998:366:11"
											},
											{
												"body": {
													"nativeSrc": "10541:248:11",
													"nodeType": "YulBlock",
													"src": "10541:248:11",
													"statements": [
														{
															"nativeSrc": "10551:26:11",
															"nodeType": "YulAssignment",
															"src": "10551:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10563:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10563:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10574:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10574:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10559:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10559:3:11"
																},
																"nativeSrc": "10559:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10559:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10551:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10551:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10598:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10598:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10609:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10609:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10594:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:11"
																		},
																		"nativeSrc": "10594:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10594:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10617:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10617:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10623:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10623:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10613:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10613:3:11"
																		},
																		"nativeSrc": "10613:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10613:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10587:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10587:6:11"
																},
																"nativeSrc": "10587:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10587:47:11"
															},
															"nativeSrc": "10587:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10587:47:11"
														},
														{
															"nativeSrc": "10643:139:11",
															"nodeType": "YulAssignment",
															"src": "10643:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10777:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10777:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10651:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10651:124:11"
																},
																"nativeSrc": "10651:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10651:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10643:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10643:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10370:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10521:9:11",
														"nodeType": "YulTypedName",
														"src": "10521:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10536:4:11",
														"nodeType": "YulTypedName",
														"src": "10536:4:11",
														"type": ""
													}
												],
												"src": "10370:419:11"
											},
											{
												"body": {
													"nativeSrc": "10840:149:11",
													"nodeType": "YulBlock",
													"src": "10840:149:11",
													"statements": [
														{
															"nativeSrc": "10850:25:11",
															"nodeType": "YulAssignment",
															"src": "10850:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10873:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10873:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10855:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10855:17:11"
																},
																"nativeSrc": "10855:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10855:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10850:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10850:1:11"
																}
															]
														},
														{
															"nativeSrc": "10884:25:11",
															"nodeType": "YulAssignment",
															"src": "10884:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10907:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10907:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10889:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10889:17:11"
																},
																"nativeSrc": "10889:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10889:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10884:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10884:1:11"
																}
															]
														},
														{
															"nativeSrc": "10918:17:11",
															"nodeType": "YulAssignment",
															"src": "10918:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10930:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10930:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10933:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10933:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10926:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10926:3:11"
																},
																"nativeSrc": "10926:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10926:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10918:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10960:22:11",
																"nodeType": "YulBlock",
																"src": "10960:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10962:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10962:16:11"
																			},
																			"nativeSrc": "10962:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10962:18:11"
																		},
																		"nativeSrc": "10962:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10962:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10951:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10951:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10957:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10957:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10948:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10948:2:11"
																},
																"nativeSrc": "10948:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10948:11:11"
															},
															"nativeSrc": "10945:37:11",
															"nodeType": "YulIf",
															"src": "10945:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10795:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10826:1:11",
														"nodeType": "YulTypedName",
														"src": "10826:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10829:1:11",
														"nodeType": "YulTypedName",
														"src": "10829:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10835:4:11",
														"nodeType": "YulTypedName",
														"src": "10835:4:11",
														"type": ""
													}
												],
												"src": "10795:194:11"
											},
											{
												"body": {
													"nativeSrc": "11121:206:11",
													"nodeType": "YulBlock",
													"src": "11121:206:11",
													"statements": [
														{
															"nativeSrc": "11131:26:11",
															"nodeType": "YulAssignment",
															"src": "11131:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11143:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11143:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11154:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11154:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11139:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11139:3:11"
																},
																"nativeSrc": "11139:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11139:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11131:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11131:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11211:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11211:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11224:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11224:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11235:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11235:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11220:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11220:3:11"
																		},
																		"nativeSrc": "11220:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11220:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11167:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11167:43:11"
																},
																"nativeSrc": "11167:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11167:71:11"
															},
															"nativeSrc": "11167:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11167:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11292:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11292:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11305:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11305:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11316:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11316:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11301:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11301:3:11"
																		},
																		"nativeSrc": "11301:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11301:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11248:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11248:43:11"
																},
																"nativeSrc": "11248:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11248:72:11"
															},
															"nativeSrc": "11248:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11248:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10995:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11085:9:11",
														"nodeType": "YulTypedName",
														"src": "11085:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11097:6:11",
														"nodeType": "YulTypedName",
														"src": "11097:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11105:6:11",
														"nodeType": "YulTypedName",
														"src": "11105:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11116:4:11",
														"nodeType": "YulTypedName",
														"src": "11116:4:11",
														"type": ""
													}
												],
												"src": "10995:332:11"
											},
											{
												"body": {
													"nativeSrc": "11459:206:11",
													"nodeType": "YulBlock",
													"src": "11459:206:11",
													"statements": [
														{
															"nativeSrc": "11469:26:11",
															"nodeType": "YulAssignment",
															"src": "11469:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11481:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11481:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11492:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11492:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11477:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11477:3:11"
																},
																"nativeSrc": "11477:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11477:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11469:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11469:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11549:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11549:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11562:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11562:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11573:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11573:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11558:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11558:3:11"
																		},
																		"nativeSrc": "11558:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11558:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11505:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11505:43:11"
																},
																"nativeSrc": "11505:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11505:71:11"
															},
															"nativeSrc": "11505:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11505:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11630:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11630:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11643:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11643:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11654:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11654:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11639:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11639:3:11"
																		},
																		"nativeSrc": "11639:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11639:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11586:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11586:43:11"
																},
																"nativeSrc": "11586:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11586:72:11"
															},
															"nativeSrc": "11586:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11586:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11333:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11423:9:11",
														"nodeType": "YulTypedName",
														"src": "11423:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11435:6:11",
														"nodeType": "YulTypedName",
														"src": "11435:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11443:6:11",
														"nodeType": "YulTypedName",
														"src": "11443:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11454:4:11",
														"nodeType": "YulTypedName",
														"src": "11454:4:11",
														"type": ""
													}
												],
												"src": "11333:332:11"
											},
											{
												"body": {
													"nativeSrc": "11825:288:11",
													"nodeType": "YulBlock",
													"src": "11825:288:11",
													"statements": [
														{
															"nativeSrc": "11835:26:11",
															"nodeType": "YulAssignment",
															"src": "11835:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11847:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11847:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11858:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11858:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11843:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11843:3:11"
																},
																"nativeSrc": "11843:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11843:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11835:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11835:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11915:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11915:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11928:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11928:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11939:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11939:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11924:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11924:3:11"
																		},
																		"nativeSrc": "11924:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11924:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11871:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11871:43:11"
																},
																"nativeSrc": "11871:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11871:71:11"
															},
															"nativeSrc": "11871:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11871:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11996:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11996:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12009:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12009:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12020:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12020:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12005:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12005:3:11"
																		},
																		"nativeSrc": "12005:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12005:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11952:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11952:43:11"
																},
																"nativeSrc": "11952:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11952:72:11"
															},
															"nativeSrc": "11952:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11952:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12078:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12078:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12091:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12091:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12102:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12102:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12087:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12087:3:11"
																		},
																		"nativeSrc": "12087:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12087:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12034:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "12034:43:11"
																},
																"nativeSrc": "12034:72:11",
																"nodeType": "YulFunctionCall",
																"src": "12034:72:11"
															},
															"nativeSrc": "12034:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "12034:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11671:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11781:9:11",
														"nodeType": "YulTypedName",
														"src": "11781:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11793:6:11",
														"nodeType": "YulTypedName",
														"src": "11793:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11801:6:11",
														"nodeType": "YulTypedName",
														"src": "11801:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11809:6:11",
														"nodeType": "YulTypedName",
														"src": "11809:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11820:4:11",
														"nodeType": "YulTypedName",
														"src": "11820:4:11",
														"type": ""
													}
												],
												"src": "11671:442:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Prize amount must be greater tha\")\n\n        mstore(add(memPtr, 32), \"n zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Prize pool is empty\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough CZ4 in prize pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610089575f3560e01c8063715018a611610058578063715018a614610126578063785fa6271461013c57806379d4964f146101665780638da5cb5b1461018e578063f2fde38b146101b857610090565b80631e1a6e6e1461009457806324600fc3146100be5780632a050024146100d457806344a88070146100fc57610090565b3661009057005b5f80fd5b34801561009f575f80fd5b506100a86101e0565b6040516100b59190610bc9565b60405180910390f35b3480156100c9575f80fd5b506100d2610205565b005b3480156100df575f80fd5b506100fa60048036038101906100f59190610c19565b61045a565b005b348015610107575f80fd5b50610110610544565b60405161011d9190610bc9565b60405180910390f35b348015610131575f80fd5b5061013a610569565b005b348015610147575f80fd5b5061015061057c565b60405161015d9190610c53565b60405180910390f35b348015610171575f80fd5b5061018c60048036038101906101879190610c19565b610582565b005b348015610199575f80fd5b506101a26107b9565b6040516101af9190610c8c565b60405180910390f35b3480156101c3575f80fd5b506101de60048036038101906101d99190610ccf565b6107e0565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61020d610864565b5f4790505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161026c9190610c8c565b602060405180830381865afa158015610287573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ab9190610d0e565b90505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103089190610c8c565b602060405180830381865afa158015610323573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103479190610d0e565b90505f83111561039d576103596107b9565b73ffffffffffffffffffffffffffffffffffffffff166108fc8490811502906040515f60405180830381858888f1935050505015801561039b573d5f803e3d5ffd5b505b5f8211156103f9576103f86103b06107b9565b8360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108eb9092919063ffffffff16565b5b5f8111156104555761045461040c6107b9565b8260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108eb9092919063ffffffff16565b5b505050565b610462610864565b5f81116104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90610db9565b60405180910390fd5b6104f233308360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661096a909392919063ffffffff16565b8060035f8282546105039190610e04565b925050819055507f7e4809669d29d4f60fc52cdc899ff62c77b16c6a3893532c483386afa590a271816040516105399190610c53565b60405180910390a150565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610571610864565b61057a5f6109ec565b565b60035481565b5f81116105c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bb90610ea7565b60405180910390fd5b5f60035411610608576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ff90610f0f565b60405180910390fd5b61065633308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661096a909392919063ffffffff16565b5f6001600542443360405160200161067093929190610f92565b604051602081830303815290604052805190602001205f1c6106929190610ffb565b61069c9190610e04565b90505f81620f4240846106af919061102b565b6106b9919061105b565b9050600354811115610700576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f7906110e6565b60405180910390fd5b8060035f8282546107119190611104565b92505081905550610764338260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108eb9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f6dd63c9a34674245c3658d149ff4d640423eb11008c777a57783c3237d96ffcf84836040516107ac929190611137565b60405180910390a2505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6107e8610864565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610858575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161084f9190610c8c565b60405180910390fd5b610861816109ec565b50565b61086c610aad565b73ffffffffffffffffffffffffffffffffffffffff1661088a6107b9565b73ffffffffffffffffffffffffffffffffffffffff16146108e9576108ad610aad565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108e09190610c8c565b60405180910390fd5b565b610965838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161091e92919061115e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ab4565b505050565b6109e6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161099f93929190611185565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ab4565b50505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f8060205f8451602086015f885af180610ad3576040513d5f823e3d81fd5b3d92505f519150505f8214610aec576001811415610b07565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b4957836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b409190610c8c565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610b91610b8c610b8784610b4f565b610b6e565b610b4f565b9050919050565b5f610ba282610b77565b9050919050565b5f610bb382610b98565b9050919050565b610bc381610ba9565b82525050565b5f602082019050610bdc5f830184610bba565b92915050565b5f80fd5b5f819050919050565b610bf881610be6565b8114610c02575f80fd5b50565b5f81359050610c1381610bef565b92915050565b5f60208284031215610c2e57610c2d610be2565b5b5f610c3b84828501610c05565b91505092915050565b610c4d81610be6565b82525050565b5f602082019050610c665f830184610c44565b92915050565b5f610c7682610b4f565b9050919050565b610c8681610c6c565b82525050565b5f602082019050610c9f5f830184610c7d565b92915050565b610cae81610c6c565b8114610cb8575f80fd5b50565b5f81359050610cc981610ca5565b92915050565b5f60208284031215610ce457610ce3610be2565b5b5f610cf184828501610cbb565b91505092915050565b5f81519050610d0881610bef565b92915050565b5f60208284031215610d2357610d22610be2565b5b5f610d3084828501610cfa565b91505092915050565b5f82825260208201905092915050565b7f5072697a6520616d6f756e74206d7573742062652067726561746572207468615f8201527f6e207a65726f0000000000000000000000000000000000000000000000000000602082015250565b5f610da3602683610d39565b9150610dae82610d49565b604082019050919050565b5f6020820190508181035f830152610dd081610d97565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e0e82610be6565b9150610e1983610be6565b9250828201905080821115610e3157610e30610dd7565b5b92915050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f610e91602883610d39565b9150610e9c82610e37565b604082019050919050565b5f6020820190508181035f830152610ebe81610e85565b9050919050565b7f5072697a6520706f6f6c20697320656d707479000000000000000000000000005f82015250565b5f610ef9601383610d39565b9150610f0482610ec5565b602082019050919050565b5f6020820190508181035f830152610f2681610eed565b9050919050565b5f819050919050565b610f47610f4282610be6565b610f2d565b82525050565b5f8160601b9050919050565b5f610f6382610f4d565b9050919050565b5f610f7482610f59565b9050919050565b610f8c610f8782610c6c565b610f6a565b82525050565b5f610f9d8286610f36565b602082019150610fad8285610f36565b602082019150610fbd8284610f7b565b601482019150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61100582610be6565b915061101083610be6565b9250826110205761101f610fce565b5b828206905092915050565b5f61103582610be6565b915061104083610be6565b9250826110505761104f610fce565b5b828204905092915050565b5f61106582610be6565b915061107083610be6565b925082820261107e81610be6565b9150828204841483151761109557611094610dd7565b5b5092915050565b7f4e6f7420656e6f75676820435a3420696e207072697a6520706f6f6c000000005f82015250565b5f6110d0601c83610d39565b91506110db8261109c565b602082019050919050565b5f6020820190508181035f8301526110fd816110c4565b9050919050565b5f61110e82610be6565b915061111983610be6565b925082820390508181111561113157611130610dd7565b5b92915050565b5f60408201905061114a5f830185610c44565b6111576020830184610c44565b9392505050565b5f6040820190506111715f830185610c7d565b61117e6020830184610c44565b9392505050565b5f6060820190506111985f830186610c7d565b6111a56020830185610c7d565b6111b26040830184610c44565b94935050505056fea264697066735822122002dd75bba71c59916e82e7ee054cb13b51c652066503c2981b82a3f558cc5fca64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x785FA627 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x79D4964F EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1B8 JUMPI PUSH2 0x90 JUMP JUMPDEST DUP1 PUSH4 0x1E1A6E6E EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x2A050024 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x44A88070 EQ PUSH2 0xFC JUMPI PUSH2 0x90 JUMP JUMPDEST CALLDATASIZE PUSH2 0x90 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xD2 PUSH2 0x205 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x45A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x110 PUSH2 0x544 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x13A PUSH2 0x569 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xC19 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x7E0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x20D PUSH2 0x864 JUMP JUMPDEST PUSH0 SELFBALANCE SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x287 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x323 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0xD0E JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 GT ISZERO PUSH2 0x39D JUMPI PUSH2 0x359 PUSH2 0x7B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x3F8 PUSH2 0x3B0 PUSH2 0x7B9 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x455 JUMPI PUSH2 0x454 PUSH2 0x40C PUSH2 0x7B9 JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x462 PUSH2 0x864 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F2 CALLER ADDRESS DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x96A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x503 SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x7E4809669D29D4F60FC52CDC899FF62C77B16C6A3893532C483386AFA590A271 DUP2 PUSH1 0x40 MLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x571 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x57A PUSH0 PUSH2 0x9EC JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BB SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 SLOAD GT PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FF SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x656 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x96A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x5 TIMESTAMP PREVRANDAO CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x670 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0x692 SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH2 0x69C SWAP2 SWAP1 PUSH2 0xE04 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH3 0xF4240 DUP5 PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x105B JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x711 SWAP2 SWAP1 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x764 CALLER DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8EB SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6DD63C9A34674245C3658D149FF4D640423EB11008C777A57783C3237D96FFCF DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7AC SWAP3 SWAP2 SWAP1 PUSH2 0x1137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0x864 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x858 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84F SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x861 DUP2 PUSH2 0x9EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0xAAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x88A PUSH2 0x7B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8E9 JUMPI PUSH2 0x8AD PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x965 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x91E SWAP3 SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xAB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9E6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x99F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xAB4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAEC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xB07 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB49 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB91 PUSH2 0xB8C PUSH2 0xB87 DUP5 PUSH2 0xB4F JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBA2 DUP3 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBB3 DUP3 PUSH2 0xB98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC3 DUP2 PUSH2 0xBA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBDC PUSH0 DUP4 ADD DUP5 PUSH2 0xBBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF8 DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP2 EQ PUSH2 0xC02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC13 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC2E JUMPI PUSH2 0xC2D PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC3B DUP5 DUP3 DUP6 ADD PUSH2 0xC05 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC4D DUP2 PUSH2 0xBE6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC66 PUSH0 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC76 DUP3 PUSH2 0xB4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC86 DUP2 PUSH2 0xC6C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC9F PUSH0 DUP4 ADD DUP5 PUSH2 0xC7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCAE DUP2 PUSH2 0xC6C JUMP JUMPDEST DUP2 EQ PUSH2 0xCB8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC9 DUP2 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE4 JUMPI PUSH2 0xCE3 PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCF1 DUP5 DUP3 DUP6 ADD PUSH2 0xCBB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD08 DUP2 PUSH2 0xBEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD23 JUMPI PUSH2 0xD22 PUSH2 0xBE2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD30 DUP5 DUP3 DUP6 ADD PUSH2 0xCFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5072697A6520616D6F756E74206D757374206265206772656174657220746861 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E207A65726F0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDA3 PUSH1 0x26 DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0xDAE DUP3 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDD0 DUP2 PUSH2 0xD97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE0E DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0xE19 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE31 JUMPI PUSH2 0xE30 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE91 PUSH1 0x28 DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0xE9C DUP3 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xEBE DUP2 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072697A6520706F6F6C20697320656D70747900000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEF9 PUSH1 0x13 DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0xF04 DUP3 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF26 DUP2 PUSH2 0xEED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF47 PUSH2 0xF42 DUP3 PUSH2 0xBE6 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF63 DUP3 PUSH2 0xF4D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF74 DUP3 PUSH2 0xF59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8C PUSH2 0xF87 DUP3 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0xF6A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF9D DUP3 DUP7 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xFAD DUP3 DUP6 PUSH2 0xF36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xFBD DUP3 DUP5 PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1005 DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1010 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1020 JUMPI PUSH2 0x101F PUSH2 0xFCE JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1035 DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1040 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1050 JUMPI PUSH2 0x104F PUSH2 0xFCE JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1065 DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1070 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x107E DUP2 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820435A3420696E207072697A6520706F6F6C00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10D0 PUSH1 0x1C DUP4 PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP PUSH2 0x10DB DUP3 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10FD DUP2 PUSH2 0x10C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x110E DUP3 PUSH2 0xBE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1119 DUP4 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1131 JUMPI PUSH2 0x1130 PUSH2 0xDD7 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x114A PUSH0 DUP4 ADD DUP6 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x1157 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1171 PUSH0 DUP4 ADD DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x117E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP7 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x11A5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC7D JUMP JUMPDEST PUSH2 0x11B2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xC44 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xDD PUSH22 0xBBA71C59916E82E7EE054CB13B51C652066503C2981B DUP3 LOG3 CREATE2 PC 0xCC PUSH0 0xCA PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "234:2508:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2051:618;;;;;;;;;;;;;:::i;:::-;;985:263;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;539:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;601:23:10;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1255:729;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;510:22:10;;;;;;;;;;;;;:::o;2051:618::-;1531:13:0;:11;:13::i;:::-;2105:15:10::1;2123:21;2105:39;;2154:15;2172:8;;;;;;;;;;;:18;;;2199:4;2172:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2154:51;;2215:16;2234:9;;;;;;;;;;;:19;;;2262:4;2234:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2215:53;;2326:1;2313:10;:14;2309:82;;;2351:7;:5;:7::i;:::-;2343:25;;:37;2369:10;2343:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2309:82;2455:1;2442:10;:14;2438:87;;;2472:42;2494:7;:5;:7::i;:::-;2503:10;2472:8;;;;;;;;;;;:21;;;;:42;;;;;:::i;:::-;2438:87;2591:1;2577:11;:15;2573:90;;;2608:44;2631:7;:5;:7::i;:::-;2640:11;2608:9;;;;;;;;;;;:22;;;;:44;;;;;:::i;:::-;2573:90;2095:574;;;2051:618::o:0;985:263::-;1531:13:0;:11;:13::i;:::-;1062:1:10::1;1053:6;:10;1045:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1116:60;1142:10;1162:4;1169:6;1116:8;;;;;;;;;;;:25;;;;:60;;;;;;:::i;:::-;1201:6;1186:11;;:21;;;;;;;:::i;:::-;;;;;;;;1223:18;1234:6;1223:18;;;;;;:::i;:::-;;;;;;;;985:263:::0;:::o;539:23::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;601:23:10:-;;;;:::o;1255:729::-;1374:1;1361:10;:14;1353:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1452:1;1438:11;;:15;1430:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1488:65;1515:10;1535:4;1542:10;1488:9;;;;;;;;;;;:26;;;;:65;;;;;;:::i;:::-;1572:17;1681:1;1676;1625:15;1642:16;1660:10;1608:63;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1598:74;;;;;;1593:80;;:84;;;;:::i;:::-;1592:90;;;;:::i;:::-;1572:110;;1692:14;1736:12;1723:9;1710:10;:22;;;;:::i;:::-;1709:39;;;;:::i;:::-;1692:56;;1780:11;;1767:9;:24;;1759:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1849:9;1834:11;;:24;;;;;;;:::i;:::-;;;;;;;;1869:44;1891:10;1903:9;1869:8;;;;;;;;;;;:21;;;;:44;;;;;:::i;:::-;1943:10;1929:48;;;1955:10;1967:9;1929:48;;;;;;;:::i;:::-;;;;;;;;1302:682;;1255:729;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1271:160:5:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;1670:188::-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7738:720:5:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:77;1416:7;1445:5;1434:16;;1379:77;;;:::o;1462:122::-;1535:24;1553:5;1535:24;:::i;:::-;1528:5;1525:35;1515:63;;1574:1;1571;1564:12;1515:63;1462:122;:::o;1590:139::-;1636:5;1674:6;1661:20;1652:29;;1690:33;1717:5;1690:33;:::i;:::-;1590:139;;;;:::o;1735:329::-;1794:6;1843:2;1831:9;1822:7;1818:23;1814:32;1811:119;;;1849:79;;:::i;:::-;1811:119;1969:1;1994:53;2039:7;2030:6;2019:9;2015:22;1994:53;:::i;:::-;1984:63;;1940:117;1735:329;;;;:::o;2070:118::-;2157:24;2175:5;2157:24;:::i;:::-;2152:3;2145:37;2070:118;;:::o;2194:222::-;2287:4;2325:2;2314:9;2310:18;2302:26;;2338:71;2406:1;2395:9;2391:17;2382:6;2338:71;:::i;:::-;2194:222;;;;:::o;2422:96::-;2459:7;2488:24;2506:5;2488:24;:::i;:::-;2477:35;;2422:96;;;:::o;2524:118::-;2611:24;2629:5;2611:24;:::i;:::-;2606:3;2599:37;2524:118;;:::o;2648:222::-;2741:4;2779:2;2768:9;2764:18;2756:26;;2792:71;2860:1;2849:9;2845:17;2836:6;2792:71;:::i;:::-;2648:222;;;;:::o;2876:122::-;2949:24;2967:5;2949:24;:::i;:::-;2942:5;2939:35;2929:63;;2988:1;2985;2978:12;2929:63;2876:122;:::o;3004:139::-;3050:5;3088:6;3075:20;3066:29;;3104:33;3131:5;3104:33;:::i;:::-;3004:139;;;;:::o;3149:329::-;3208:6;3257:2;3245:9;3236:7;3232:23;3228:32;3225:119;;;3263:79;;:::i;:::-;3225:119;3383:1;3408:53;3453:7;3444:6;3433:9;3429:22;3408:53;:::i;:::-;3398:63;;3354:117;3149:329;;;;:::o;3484:143::-;3541:5;3572:6;3566:13;3557:22;;3588:33;3615:5;3588:33;:::i;:::-;3484:143;;;;:::o;3633:351::-;3703:6;3752:2;3740:9;3731:7;3727:23;3723:32;3720:119;;;3758:79;;:::i;:::-;3720:119;3878:1;3903:64;3959:7;3950:6;3939:9;3935:22;3903:64;:::i;:::-;3893:74;;3849:128;3633:351;;;;:::o;3990:169::-;4074:11;4108:6;4103:3;4096:19;4148:4;4143:3;4139:14;4124:29;;3990:169;;;;:::o;4165:225::-;4305:34;4301:1;4293:6;4289:14;4282:58;4374:8;4369:2;4361:6;4357:15;4350:33;4165:225;:::o;4396:366::-;4538:3;4559:67;4623:2;4618:3;4559:67;:::i;:::-;4552:74;;4635:93;4724:3;4635:93;:::i;:::-;4753:2;4748:3;4744:12;4737:19;;4396:366;;;:::o;4768:419::-;4934:4;4972:2;4961:9;4957:18;4949:26;;5021:9;5015:4;5011:20;5007:1;4996:9;4992:17;4985:47;5049:131;5175:4;5049:131;:::i;:::-;5041:139;;4768:419;;;:::o;5193:180::-;5241:77;5238:1;5231:88;5338:4;5335:1;5328:15;5362:4;5359:1;5352:15;5379:191;5419:3;5438:20;5456:1;5438:20;:::i;:::-;5433:25;;5472:20;5490:1;5472:20;:::i;:::-;5467:25;;5515:1;5512;5508:9;5501:16;;5536:3;5533:1;5530:10;5527:36;;;5543:18;;:::i;:::-;5527:36;5379:191;;;;:::o;5576:227::-;5716:34;5712:1;5704:6;5700:14;5693:58;5785:10;5780:2;5772:6;5768:15;5761:35;5576:227;:::o;5809:366::-;5951:3;5972:67;6036:2;6031:3;5972:67;:::i;:::-;5965:74;;6048:93;6137:3;6048:93;:::i;:::-;6166:2;6161:3;6157:12;6150:19;;5809:366;;;:::o;6181:419::-;6347:4;6385:2;6374:9;6370:18;6362:26;;6434:9;6428:4;6424:20;6420:1;6409:9;6405:17;6398:47;6462:131;6588:4;6462:131;:::i;:::-;6454:139;;6181:419;;;:::o;6606:169::-;6746:21;6742:1;6734:6;6730:14;6723:45;6606:169;:::o;6781:366::-;6923:3;6944:67;7008:2;7003:3;6944:67;:::i;:::-;6937:74;;7020:93;7109:3;7020:93;:::i;:::-;7138:2;7133:3;7129:12;7122:19;;6781:366;;;:::o;7153:419::-;7319:4;7357:2;7346:9;7342:18;7334:26;;7406:9;7400:4;7396:20;7392:1;7381:9;7377:17;7370:47;7434:131;7560:4;7434:131;:::i;:::-;7426:139;;7153:419;;;:::o;7578:79::-;7617:7;7646:5;7635:16;;7578:79;;;:::o;7663:157::-;7768:45;7788:24;7806:5;7788:24;:::i;:::-;7768:45;:::i;:::-;7763:3;7756:58;7663:157;;:::o;7826:94::-;7859:8;7907:5;7903:2;7899:14;7878:35;;7826:94;;;:::o;7926:::-;7965:7;7994:20;8008:5;7994:20;:::i;:::-;7983:31;;7926:94;;;:::o;8026:100::-;8065:7;8094:26;8114:5;8094:26;:::i;:::-;8083:37;;8026:100;;;:::o;8132:157::-;8237:45;8257:24;8275:5;8257:24;:::i;:::-;8237:45;:::i;:::-;8232:3;8225:58;8132:157;;:::o;8295:538::-;8463:3;8478:75;8549:3;8540:6;8478:75;:::i;:::-;8578:2;8573:3;8569:12;8562:19;;8591:75;8662:3;8653:6;8591:75;:::i;:::-;8691:2;8686:3;8682:12;8675:19;;8704:75;8775:3;8766:6;8704:75;:::i;:::-;8804:2;8799:3;8795:12;8788:19;;8824:3;8817:10;;8295:538;;;;;;:::o;8839:180::-;8887:77;8884:1;8877:88;8984:4;8981:1;8974:15;9008:4;9005:1;8998:15;9025:176;9057:1;9074:20;9092:1;9074:20;:::i;:::-;9069:25;;9108:20;9126:1;9108:20;:::i;:::-;9103:25;;9147:1;9137:35;;9152:18;;:::i;:::-;9137:35;9193:1;9190;9186:9;9181:14;;9025:176;;;;:::o;9207:185::-;9247:1;9264:20;9282:1;9264:20;:::i;:::-;9259:25;;9298:20;9316:1;9298:20;:::i;:::-;9293:25;;9337:1;9327:35;;9342:18;;:::i;:::-;9327:35;9384:1;9381;9377:9;9372:14;;9207:185;;;;:::o;9398:410::-;9438:7;9461:20;9479:1;9461:20;:::i;:::-;9456:25;;9495:20;9513:1;9495:20;:::i;:::-;9490:25;;9550:1;9547;9543:9;9572:30;9590:11;9572:30;:::i;:::-;9561:41;;9751:1;9742:7;9738:15;9735:1;9732:22;9712:1;9705:9;9685:83;9662:139;;9781:18;;:::i;:::-;9662:139;9446:362;9398:410;;;;:::o;9814:178::-;9954:30;9950:1;9942:6;9938:14;9931:54;9814:178;:::o;9998:366::-;10140:3;10161:67;10225:2;10220:3;10161:67;:::i;:::-;10154:74;;10237:93;10326:3;10237:93;:::i;:::-;10355:2;10350:3;10346:12;10339:19;;9998:366;;;:::o;10370:419::-;10536:4;10574:2;10563:9;10559:18;10551:26;;10623:9;10617:4;10613:20;10609:1;10598:9;10594:17;10587:47;10651:131;10777:4;10651:131;:::i;:::-;10643:139;;10370:419;;;:::o;10795:194::-;10835:4;10855:20;10873:1;10855:20;:::i;:::-;10850:25;;10889:20;10907:1;10889:20;:::i;:::-;10884:25;;10933:1;10930;10926:9;10918:17;;10957:1;10951:4;10948:11;10945:37;;;10962:18;;:::i;:::-;10945:37;10795:194;;;;:::o;10995:332::-;11116:4;11154:2;11143:9;11139:18;11131:26;;11167:71;11235:1;11224:9;11220:17;11211:6;11167:71;:::i;:::-;11248:72;11316:2;11305:9;11301:18;11292:6;11248:72;:::i;:::-;10995:332;;;;;:::o;11333:::-;11454:4;11492:2;11481:9;11477:18;11469:26;;11505:71;11573:1;11562:9;11558:17;11549:6;11505:71;:::i;:::-;11586:72;11654:2;11643:9;11639:18;11630:6;11586:72;:::i;:::-;11333:332;;;;;:::o;11671:442::-;11820:4;11858:2;11847:9;11843:18;11835:26;;11871:71;11939:1;11928:9;11924:17;11915:6;11871:71;:::i;:::-;11952:72;12020:2;12009:9;12005:18;11996:6;11952:72;:::i;:::-;12034;12102:2;12091:9;12087:18;12078:6;12034:72;:::i;:::-;11671:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "918400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addPrize(uint256)": "infinite",
								"cz4Token()": "infinite",
								"depositFASU(uint256)": "infinite",
								"fasuToken()": "infinite",
								"owner()": "2581",
								"prizeAmount()": "2447",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 234,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 929,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 929,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 760,
									"end": 929,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 760,
									"end": 929,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 760,
									"end": 929,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 760,
									"end": 929,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 760,
									"end": 929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 760,
									"end": 929,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 267,
									"end": 309,
									"name": "PUSH",
									"source": 10,
									"value": "50DD541AD540D046E5822A1D5440060D58776EA6"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 858,
									"end": 874,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 840,
									"end": 848,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 840,
									"end": 848,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 840,
									"end": 875,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 875,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 875,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 840,
									"end": 875,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 904,
									"end": 921,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 885,
									"end": 894,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 885,
									"end": 894,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 885,
									"end": 922,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 885,
									"end": 922,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 885,
									"end": 922,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 885,
									"end": 922,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 885,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 760,
									"end": 929,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 2742,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002dd75bba71c59916e82e7ee054cb13b51c652066503c2981b82a3f558cc5fca64736f6c634300081a0033",
									".code": [
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "785FA627"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "79D4964F"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "1E1A6E6E"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "24600FC3"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "2A050024"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "44A88070"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 234,
											"end": 2742,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 510,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 510,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2051,
											"end": 2669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 985,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 985,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 539,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 539,
											"end": 562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 601,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 601,
											"end": 624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1255,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1255,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 532,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 510,
											"end": 532,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 510,
											"end": 532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2051,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2105,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 2199,
											"end": 2203,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2172,
											"end": 2205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2205,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2172,
											"end": 2205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2172,
											"end": 2205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2154,
											"end": 2205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 2262,
											"end": 2266,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2234,
											"end": 2268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2268,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2234,
											"end": 2268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 2234,
											"end": 2268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2323,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2313,
											"end": 2327,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2391,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2309,
											"end": 2391,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2351,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2351,
											"end": 2358,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2351,
											"end": 2358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2343,
											"end": 2368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8FC"
										},
										{
											"begin": 2369,
											"end": 2379,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2380,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2343,
											"end": 2380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2309,
											"end": 2391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2455,
											"end": 2456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2442,
											"end": 2456,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2525,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2438,
											"end": 2525,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2494,
											"end": 2501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2494,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2494,
											"end": 2501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 2494,
											"end": 2501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2513,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2472,
											"end": 2480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2472,
											"end": 2493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2472,
											"end": 2493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2472,
											"end": 2514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 2438,
											"end": 2525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2591,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2577,
											"end": 2592,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2663,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2573,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2631,
											"end": 2638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2631,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 2631,
											"end": 2638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2631,
											"end": 2638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 2631,
											"end": 2638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2608,
											"end": 2617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2608,
											"end": 2630,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2608,
											"end": 2630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 2608,
											"end": 2652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2573,
											"end": 2663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 2573,
											"end": 2663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2669,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2669,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2095,
											"end": 2669,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2051,
											"end": 2669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1062,
											"end": 1063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1059,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1053,
											"end": 1063,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1045,
											"end": 1106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1045,
											"end": 1106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1142,
											"end": 1152,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1166,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1169,
											"end": 1175,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1141,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1116,
											"end": 1141,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1116,
											"end": 1176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1186,
											"end": 1197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1186,
											"end": 1207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1207,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7E4809669D29D4F60FC52CDC899FF62C77B16C6A3893532C483386AFA590A271"
										},
										{
											"begin": 1234,
											"end": 1240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1223,
											"end": 1241,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1241,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 985,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 539,
											"end": 562,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 624,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 624,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 601,
											"end": 624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1375,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1371,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1361,
											"end": 1375,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1353,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1353,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1438,
											"end": 1449,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1438,
											"end": 1453,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1430,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1515,
											"end": 1525,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1535,
											"end": 1539,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1552,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1488,
											"end": 1514,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 1488,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1682,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1676,
											"end": 1677,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1625,
											"end": 1640,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1658,
											"name": "PREVRANDAO",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1670,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 1608,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1672,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1672,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1672,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1672,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1672,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1672,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1673,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1593,
											"end": 1677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1593,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1677,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1593,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1592,
											"end": 1682,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1592,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1592,
											"end": 1682,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1592,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1572,
											"end": 1682,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1572,
											"end": 1682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1706,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1732,
											"name": "PUSH",
											"source": 10,
											"value": "F4240"
										},
										{
											"begin": 1710,
											"end": 1720,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1710,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1710,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1709,
											"end": 1748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1709,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1748,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1692,
											"end": 1748,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1791,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1780,
											"end": 1791,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1776,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1759,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 1759,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1849,
											"end": 1858,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1834,
											"end": 1845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 1834,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1891,
											"end": 1901,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1877,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1869,
											"end": 1890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 1869,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1953,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "PUSH",
											"source": 10,
											"value": "6DD63C9A34674245C3658D149FF4D640423EB11008C777A57783C3237D96FFCF"
										},
										{
											"begin": 1955,
											"end": 1965,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 1929,
											"end": 1977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1977,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1255,
											"end": 1984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1434,
											"end": 1450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1456,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1379,
											"end": 1456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1553,
											"end": 1558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 1535,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 1535,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1528,
											"end": 1533,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1560,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1564,
											"end": 1576,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 1515,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1462,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1661,
											"end": 1681,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1652,
											"end": 1681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 1690,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 1690,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1590,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1590,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1794,
											"end": 1800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1845,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1840,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1822,
											"end": 1829,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1814,
											"end": 1846,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 1849,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 1849,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 1811,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2019,
											"end": 2028,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2037,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 1994,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 1994,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 2047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 2047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1940,
											"end": 2057,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 2064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 2064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2175,
											"end": 2180,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2157,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 2157,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2152,
											"end": 2155,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2182,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2188,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2291,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2310,
											"end": 2328,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2328,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2406,
											"end": 2407,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2404,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 2338,
											"end": 2409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 2338,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2416,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2194,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2459,
											"end": 2466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2506,
											"end": 2511,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2488,
											"end": 2512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2488,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2422,
											"end": 2518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2606,
											"end": 2609,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2524,
											"end": 2642,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2524,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2756,
											"end": 2782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2860,
											"end": 2861,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2845,
											"end": 2862,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 2792,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2792,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2648,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2967,
											"end": 2972,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2949,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 2949,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2942,
											"end": 2947,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2974,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2986,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 2990,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2929,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 2998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3075,
											"end": 3095,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3095,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 3104,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 3104,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3143,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3236,
											"end": 3243,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3255,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3260,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3263,
											"end": 3342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3263,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 3225,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3453,
											"end": 3460,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3433,
											"end": 3442,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3429,
											"end": 3451,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3408,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3408,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3398,
											"end": 3461,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3354,
											"end": 3471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3149,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3566,
											"end": 3579,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3557,
											"end": 3579,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3588,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 3588,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3627,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3731,
											"end": 3738,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3727,
											"end": 3750,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3723,
											"end": 3755,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3758,
											"end": 3837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 3758,
											"end": 3837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 3720,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3959,
											"end": 3966,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3950,
											"end": 3956,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3939,
											"end": 3948,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3935,
											"end": 3957,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3903,
											"end": 3967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3903,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3893,
											"end": 3967,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3849,
											"end": 3977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3984,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3633,
											"end": 3984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4074,
											"end": 4085,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4103,
											"end": 4106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4115,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4152,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4146,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4153,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4124,
											"end": 4153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4159,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3990,
											"end": 4159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4165,
											"end": 4390,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 4165,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4305,
											"end": 4339,
											"name": "PUSH",
											"source": 11,
											"value": "5072697A6520616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 4301,
											"end": 4302,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4289,
											"end": 4303,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4282,
											"end": 4340,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4374,
											"end": 4382,
											"name": "PUSH",
											"source": 11,
											"value": "6E207A65726F0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4369,
											"end": 4371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4367,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4357,
											"end": 4372,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4383,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4165,
											"end": 4390,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4165,
											"end": 4390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4762,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4396,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4538,
											"end": 4541,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4623,
											"end": 4625,
											"name": "PUSH",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4618,
											"end": 4621,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4559,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4559,
											"end": 4626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4559,
											"end": 4626,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 4559,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4552,
											"end": 4626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4724,
											"end": 4727,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 4635,
											"end": 4728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4635,
											"end": 4728,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 4635,
											"end": 4728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4753,
											"end": 4755,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4751,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4744,
											"end": 4756,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4756,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4737,
											"end": 4756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4396,
											"end": 4762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 5187,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 4768,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4934,
											"end": 4938,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 4970,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4957,
											"end": 4975,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5021,
											"end": 5030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5031,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5005,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4985,
											"end": 5032,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5049,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5049,
											"end": 5180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5049,
											"end": 5180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5049,
											"end": 5180,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 5049,
											"end": 5180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5180,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5041,
											"end": 5180,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 5187,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 5187,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 5187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 5187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5193,
											"end": 5373,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5193,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5318,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5238,
											"end": 5239,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5319,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5362,
											"end": 5366,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5359,
											"end": 5360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5352,
											"end": 5367,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5570,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 5379,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5419,
											"end": 5422,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5438,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5438,
											"end": 5458,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5438,
											"end": 5458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5438,
											"end": 5458,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 5438,
											"end": 5458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5458,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5490,
											"end": 5491,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5472,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 5472,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5467,
											"end": 5492,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5467,
											"end": 5492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5508,
											"end": 5517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5539,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5533,
											"end": 5534,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5540,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5563,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 5527,
											"end": 5563,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5543,
											"end": 5561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5527,
											"end": 5563,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 5527,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5570,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5570,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5570,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5379,
											"end": 5570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5576,
											"end": 5803,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 5576,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5716,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 5712,
											"end": 5713,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5710,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5700,
											"end": 5714,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5693,
											"end": 5751,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5785,
											"end": 5795,
											"name": "PUSH",
											"source": 11,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5782,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5768,
											"end": 5783,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5761,
											"end": 5796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5576,
											"end": 5803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5576,
											"end": 5803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5809,
											"end": 6175,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5809,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5951,
											"end": 5954,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5972,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 6036,
											"end": 6038,
											"name": "PUSH",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 6031,
											"end": 6034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5972,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5972,
											"end": 6039,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 5972,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5965,
											"end": 6039,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5965,
											"end": 6039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6137,
											"end": 6140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6141,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 6048,
											"end": 6141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6141,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6048,
											"end": 6141,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6168,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6157,
											"end": 6169,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6150,
											"end": 6169,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6150,
											"end": 6169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5809,
											"end": 6175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5809,
											"end": 6175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5809,
											"end": 6175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5809,
											"end": 6175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6181,
											"end": 6600,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 6181,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6387,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6362,
											"end": 6388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6362,
											"end": 6388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6434,
											"end": 6443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6424,
											"end": 6444,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6420,
											"end": 6421,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6405,
											"end": 6422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6398,
											"end": 6445,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6462,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6462,
											"end": 6593,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 6462,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6454,
											"end": 6593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6454,
											"end": 6593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6181,
											"end": 6600,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6181,
											"end": 6600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6181,
											"end": 6600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6181,
											"end": 6600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6746,
											"end": 6767,
											"name": "PUSH",
											"source": 11,
											"value": "5072697A6520706F6F6C20697320656D70747900000000000000000000000000"
										},
										{
											"begin": 6742,
											"end": 6743,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6740,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6730,
											"end": 6744,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6723,
											"end": 6768,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6606,
											"end": 6775,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6606,
											"end": 6775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6781,
											"end": 7147,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 6781,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6923,
											"end": 6926,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6944,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7008,
											"end": 7010,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 7003,
											"end": 7006,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6944,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 6944,
											"end": 7011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6944,
											"end": 7011,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 6944,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6937,
											"end": 7011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6937,
											"end": 7011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7020,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7109,
											"end": 7112,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7020,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 7020,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7020,
											"end": 7113,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7020,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7138,
											"end": 7140,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7133,
											"end": 7136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7129,
											"end": 7141,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7141,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6781,
											"end": 7147,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6781,
											"end": 7147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6781,
											"end": 7147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6781,
											"end": 7147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7572,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7153,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7319,
											"end": 7323,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7359,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 7355,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7342,
											"end": 7360,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7360,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7360,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7406,
											"end": 7415,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7416,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7392,
											"end": 7393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7390,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7377,
											"end": 7394,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7370,
											"end": 7417,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7560,
											"end": 7564,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 7434,
											"end": 7565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7434,
											"end": 7565,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7434,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7565,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7572,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7572,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7153,
											"end": 7572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7624,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7651,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7578,
											"end": 7657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7578,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7663,
											"end": 7820,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 7663,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7768,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7806,
											"end": 7811,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 7788,
											"end": 7812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7788,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7768,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 7768,
											"end": 7813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7768,
											"end": 7813,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7768,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7763,
											"end": 7766,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7756,
											"end": 7814,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7663,
											"end": 7820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7663,
											"end": 7820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7663,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7826,
											"end": 7920,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 7826,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7859,
											"end": 7867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7912,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7903,
											"end": 7905,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7899,
											"end": 7913,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7913,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7878,
											"end": 7913,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7826,
											"end": 7920,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7826,
											"end": 7920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7826,
											"end": 7920,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7826,
											"end": 7920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 8020,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 7926,
											"end": 8020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7965,
											"end": 7972,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7994,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 8008,
											"end": 8013,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8014,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 7994,
											"end": 8014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8014,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 7994,
											"end": 8014,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7983,
											"end": 8014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7983,
											"end": 8014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 8020,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 8020,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 8020,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7926,
											"end": 8020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8126,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 8026,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8094,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 8114,
											"end": 8119,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8094,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 8094,
											"end": 8120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8094,
											"end": 8120,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 8094,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8083,
											"end": 8120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8083,
											"end": 8120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8126,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8289,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 8132,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8237,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8257,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 8275,
											"end": 8280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8257,
											"end": 8281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 8257,
											"end": 8281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8257,
											"end": 8281,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 8257,
											"end": 8281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8237,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 8237,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8237,
											"end": 8282,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8237,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8235,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8225,
											"end": 8283,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8132,
											"end": 8289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8463,
											"end": 8466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 8549,
											"end": 8552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8540,
											"end": 8546,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8478,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 8478,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8478,
											"end": 8553,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 8478,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8573,
											"end": 8576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8569,
											"end": 8581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8562,
											"end": 8581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8562,
											"end": 8581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8591,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 8662,
											"end": 8665,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8653,
											"end": 8659,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8591,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 8591,
											"end": 8666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8591,
											"end": 8666,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 8591,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8691,
											"end": 8693,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8686,
											"end": 8689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8682,
											"end": 8694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8694,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8694,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 8775,
											"end": 8778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8766,
											"end": 8772,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 8704,
											"end": 8779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 8704,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8806,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 8799,
											"end": 8802,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8795,
											"end": 8807,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8807,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8807,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8824,
											"end": 8827,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8817,
											"end": 8827,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8817,
											"end": 8827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8295,
											"end": 8833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8839,
											"end": 9019,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 8839,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8887,
											"end": 8964,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8884,
											"end": 8885,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 8965,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8984,
											"end": 8988,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 8981,
											"end": 8982,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8974,
											"end": 8989,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9008,
											"end": 9012,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9005,
											"end": 9006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8998,
											"end": 9013,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9025,
											"end": 9201,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 9025,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9057,
											"end": 9058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 9092,
											"end": 9093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 9074,
											"end": 9094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 9074,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9069,
											"end": 9094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9069,
											"end": 9094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9108,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 9126,
											"end": 9127,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9108,
											"end": 9128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 9108,
											"end": 9128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9108,
											"end": 9128,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 9108,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9103,
											"end": 9128,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9103,
											"end": 9128,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9147,
											"end": 9148,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 9137,
											"end": 9172,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 9152,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 9152,
											"end": 9170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9152,
											"end": 9170,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 9152,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9172,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 9137,
											"end": 9172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9193,
											"end": 9194,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9186,
											"end": 9195,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9195,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9195,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9025,
											"end": 9201,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9025,
											"end": 9201,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9025,
											"end": 9201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9025,
											"end": 9201,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9025,
											"end": 9201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9392,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 9207,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9248,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 9282,
											"end": 9283,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9264,
											"end": 9284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 9264,
											"end": 9284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9264,
											"end": 9284,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 9264,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9259,
											"end": 9284,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9259,
											"end": 9284,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9298,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 9316,
											"end": 9317,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9298,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 9298,
											"end": 9318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9298,
											"end": 9318,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 9298,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9293,
											"end": 9318,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9293,
											"end": 9318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 9342,
											"end": 9360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9384,
											"end": 9385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9377,
											"end": 9386,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9386,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9372,
											"end": 9386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9392,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9392,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9207,
											"end": 9392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9808,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 9398,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9438,
											"end": 9445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 9479,
											"end": 9480,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9461,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 9461,
											"end": 9481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9461,
											"end": 9481,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 9461,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9456,
											"end": 9481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9456,
											"end": 9481,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9495,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9513,
											"end": 9514,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9495,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 9495,
											"end": 9515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9495,
											"end": 9515,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9495,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9515,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9515,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9550,
											"end": 9551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9543,
											"end": 9552,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9572,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9590,
											"end": 9601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9572,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 9572,
											"end": 9602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9572,
											"end": 9602,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9572,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9561,
											"end": 9602,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9561,
											"end": 9602,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9751,
											"end": 9752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9742,
											"end": 9749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9738,
											"end": 9753,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 9735,
											"end": 9736,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9732,
											"end": 9754,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 9712,
											"end": 9713,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9705,
											"end": 9714,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9685,
											"end": 9768,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 9781,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 9662,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9446,
											"end": 9808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9808,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9808,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9808,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 9992,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 9814,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9954,
											"end": 9984,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F7420656E6F75676820435A3420696E207072697A6520706F6F6C00000000"
										},
										{
											"begin": 9950,
											"end": 9951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9938,
											"end": 9952,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9931,
											"end": 9985,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 9992,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9814,
											"end": 9992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10364,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 9998,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10140,
											"end": 10143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10161,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 10225,
											"end": 10227,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 10220,
											"end": 10223,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10161,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 10161,
											"end": 10228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10161,
											"end": 10228,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 10161,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10154,
											"end": 10228,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10154,
											"end": 10228,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 10326,
											"end": 10329,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 10237,
											"end": 10330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10237,
											"end": 10330,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 10237,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10355,
											"end": 10357,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10353,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10346,
											"end": 10358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10339,
											"end": 10358,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10339,
											"end": 10358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10364,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10370,
											"end": 10789,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 10370,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10536,
											"end": 10540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10576,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10563,
											"end": 10572,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10559,
											"end": 10577,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10551,
											"end": 10577,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10551,
											"end": 10577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10623,
											"end": 10632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10617,
											"end": 10621,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10633,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10609,
											"end": 10610,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10607,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10594,
											"end": 10611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10587,
											"end": 10634,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10651,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 10777,
											"end": 10781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10651,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 10651,
											"end": 10782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10651,
											"end": 10782,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 10651,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10643,
											"end": 10782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10643,
											"end": 10782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10370,
											"end": 10789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10370,
											"end": 10789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10370,
											"end": 10789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10370,
											"end": 10789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10989,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 10795,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10835,
											"end": 10839,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 10855,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10855,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10875,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10875,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 10907,
											"end": 10908,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 10889,
											"end": 10909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 10889,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10884,
											"end": 10909,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10884,
											"end": 10909,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10933,
											"end": 10934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10930,
											"end": 10931,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10926,
											"end": 10935,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 10935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10918,
											"end": 10935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10957,
											"end": 10958,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 10955,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10948,
											"end": 10959,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10945,
											"end": 10982,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10945,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 10945,
											"end": 10982,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 10962,
											"end": 10980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 10962,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10945,
											"end": 10982,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 10945,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10989,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10989,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10989,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10795,
											"end": 10989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11327,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 10995,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11116,
											"end": 11120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11156,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11143,
											"end": 11152,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11139,
											"end": 11157,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11131,
											"end": 11157,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11131,
											"end": 11157,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 11235,
											"end": 11236,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11224,
											"end": 11233,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11220,
											"end": 11237,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11211,
											"end": 11217,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 11167,
											"end": 11238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11167,
											"end": 11238,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 11167,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11248,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 11316,
											"end": 11318,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11305,
											"end": 11314,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11292,
											"end": 11298,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11248,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 11248,
											"end": 11320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11248,
											"end": 11320,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 11248,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11327,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11327,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11665,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 11333,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11454,
											"end": 11458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11492,
											"end": 11494,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11481,
											"end": 11490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11477,
											"end": 11495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11469,
											"end": 11495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11469,
											"end": 11495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11505,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 11573,
											"end": 11574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11562,
											"end": 11571,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11575,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11549,
											"end": 11555,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11505,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 11505,
											"end": 11576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11505,
											"end": 11576,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 11505,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 11654,
											"end": 11656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11643,
											"end": 11652,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11630,
											"end": 11636,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 11586,
											"end": 11658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 11586,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11665,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11665,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11333,
											"end": 11665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11820,
											"end": 11824,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11860,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11847,
											"end": 11856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11843,
											"end": 11861,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11835,
											"end": 11861,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11835,
											"end": 11861,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 11939,
											"end": 11940,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 11937,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11924,
											"end": 11941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11915,
											"end": 11921,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 11871,
											"end": 11942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 11871,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 12020,
											"end": 12022,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12009,
											"end": 12018,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12005,
											"end": 12023,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11996,
											"end": 12002,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 11952,
											"end": 12024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 11952,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12102,
											"end": 12104,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12091,
											"end": 12100,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12078,
											"end": 12084,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 12034,
											"end": 12106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 12113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/GameContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addPrize(uint256)": "2a050024",
							"cz4Token()": "1e1a6e6e",
							"depositFASU(uint256)": "79d4964f",
							"fasuToken()": "44a88070",
							"owner()": "8da5cb5b",
							"prizeAmount()": "785fa627",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdrawFunds()": "24600fc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cz4TokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fasuTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fasuAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cz4Reward\",\"type\":\"uint256\"}],\"name\":\"FASUDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PrizeAdded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cz4Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fasuAmount\",\"type\":\"uint256\"}],\"name\":\"depositFASU\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fasuToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameContract.sol\":\"GameContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/GameContract.sol\":{\"keccak256\":\"0x532b2be4a1aab4293d87c1826db5bef0a937d33a8cc3f7936849f86df9bc7f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9230a50082933795ea5f10446bcd85e032e93238ad8de10df4811a5f9c42cc76\",\"dweb:/ipfs/QmW1PQFC3W9eanP3Xn5jhg6FiTNYNfUWzGXNJ233asH9ZZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/GameContract.sol:GameContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1064,
								"contract": "contracts/GameContract.sol:GameContract",
								"label": "cz4Token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 1067,
								"contract": "contracts/GameContract.sol:GameContract",
								"label": "fasuToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 1069,
								"contract": "contracts/GameContract.sol:GameContract",
								"label": "prizeAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1015
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1016,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1015,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1015
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1049
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1049,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1049,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1049,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1049
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1050,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1049,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							726
						]
					},
					"id": 727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 986,
							"src": "238:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 322,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "246:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 324,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 726,
							"linearizedBaseContracts": [
								726
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 329,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "875:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:5"
									},
									"src": "844:46:5"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 338,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1028:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1054:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:5"
									},
									"src": "972:109:5"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "1343:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "1373:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 353,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "1395:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1395:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 355,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1412:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 356,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1416:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1353:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:5"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1293:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1293:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1293:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1307:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1319:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:5"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:5"
									},
									"scope": 726,
									"src": "1271:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1760:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "1790:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 379,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "1812:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1812:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 381,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1833:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 382,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1839:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "1843:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 384,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 377,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 375,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1770:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:5"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1696:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1696:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1696:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1710:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1724:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1736:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:5"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:5"
									},
									"scope": 726,
									"src": "1670:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2600:139:5",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "2610:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$726",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$726",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "2664:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 402,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2633:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "2633:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2695:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 413,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "2702:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2711:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 415,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "2726:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2682:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:5"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2545:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 391,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2545:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2545:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2559:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2576:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:5"
									},
									"scope": 726,
									"src": "2514:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3505:370:5",
										"statements": [
											{
												"id": 461,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:5",
												"statements": [
													{
														"assignments": [
															432
														],
														"declarations": [
															{
																"constant": false,
																"id": 432,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 461,
																"src": "3539:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 431,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 441,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 437,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$726",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$726",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 435,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 439,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "3597:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 433,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3566:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "3566:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "3623:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 443,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "3642:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 452,
														"nodeType": "IfStatement",
														"src": "3619:160:5",
														"trueBody": {
															"id": 451,
															"nodeType": "Block",
															"src": "3661:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 446,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "3719:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 447,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "3728:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 448,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "3746:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 445,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "3686:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 450,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 454,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3805:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 455,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "3812:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 456,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "3821:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 457,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "3840:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 453,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "3792:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 460,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3438:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 422,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3438:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3452:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3469:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:5"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:5"
									},
									"scope": 726,
									"src": "3407:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "4529:303:5",
										"statements": [
											{
												"assignments": [
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 475,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 509,
														"src": "4539:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 474,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 478,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "4582:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4582:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4598:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "4607:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 482,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 476,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:5"
											},
											{
												"condition": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 486,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "4654:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 487,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "4661:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 485,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4630:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 508,
												"nodeType": "IfStatement",
												"src": "4625:201:5",
												"trueBody": {
													"id": 507,
													"nodeType": "Block",
													"src": "4676:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "4710:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 494,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "4732:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "4732:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 496,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 469,
																						"src": "4748:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 492,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 490,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "4690:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 503,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "4795:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 504,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "4802:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 502,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "4775:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4474:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 465,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4474:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4474:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4488:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4505:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:5"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:5"
									},
									"scope": 726,
									"src": "4452:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5279:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 523,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "5293:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 537,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5402:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5406:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 539,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "5413:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 535,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "5380:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 550,
													"nodeType": "IfStatement",
													"src": "5375:117:5",
													"trueBody": {
														"id": 549,
														"nodeType": "Block",
														"src": "5420:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 545,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 514,
																					"src": "5474:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 543,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 542,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "5441:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 548,
																"nodeType": "RevertStatement",
																"src": "5434:47:5"
															}
														]
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "5289:203:5",
												"trueBody": {
													"id": 534,
													"nodeType": "Block",
													"src": "5314:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 529,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "5341:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 530,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "5348:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 531,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "5352:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 528,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5328:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5224:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5236:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5251:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:5"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:5"
									},
									"scope": 726,
									"src": "5176:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "6017:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "6031:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6154:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 584,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6160:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6164:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 586,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "6171:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6128:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 597,
													"nodeType": "IfStatement",
													"src": "6123:127:5",
													"trueBody": {
														"id": 596,
														"nodeType": "Block",
														"src": "6178:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 592,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 557,
																					"src": "6232:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 590,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 589,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "6199:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 595,
																"nodeType": "RevertStatement",
																"src": "6192:47:5"
															}
														]
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6027:223:5",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "6052:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 574,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6083:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 575,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6090:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 576,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "6096:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 577,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "6100:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 573,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "6066:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5895:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 555,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5919:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5941:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5961:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5984:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:5"
									},
									"scope": 726,
									"src": "5850:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "7023:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 613,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "7037:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 627,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "7145:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "7149:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 629,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "7156:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 625,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "7124:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 640,
													"nodeType": "IfStatement",
													"src": "7119:116:5",
													"trueBody": {
														"id": 639,
														"nodeType": "Block",
														"src": "7163:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 635,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "7217:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 633,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 632,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "7184:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 638,
																"nodeType": "RevertStatement",
																"src": "7177:47:5"
															}
														]
													}
												},
												"id": 641,
												"nodeType": "IfStatement",
												"src": "7033:202:5",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "7058:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "7085:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 620,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "7092:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "7096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "7072:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6952:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6968:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6980:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6995:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:5"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:5"
									},
									"scope": 726,
									"src": "6921:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "7808:650:5",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "7818:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:5"
											},
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "7846:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:5"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:5",
													"nodeType": "YulBlock",
													"src": "7900:396:5",
													"statements": [
														{
															"nativeSrc": "7914:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:5"
																		},
																		"nativeSrc": "7934:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:5"
																		},
																		"nativeSrc": "7951:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:5"
																		},
																		"nativeSrc": "7968:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:5"
																},
																"nativeSrc": "7929:60:5",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:5",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:5",
																"nodeType": "YulBlock",
																"src": "8050:157:5",
																"statements": [
																	{
																		"nativeSrc": "8068:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:5"
																			},
																			"nativeSrc": "8079:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:5"
																					},
																					"nativeSrc": "8130:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:5"
																			},
																			"nativeSrc": "8107:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:5"
																		},
																		"nativeSrc": "8107:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:5"
																					},
																					"nativeSrc": "8176:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:5"
																			},
																			"nativeSrc": "8164:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:5"
																		},
																		"nativeSrc": "8164:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:5"
																},
																"nativeSrc": "8034:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:5"
															},
															"nativeSrc": "8031:176:5",
															"nodeType": "YulIf",
															"src": "8031:176:5"
														},
														{
															"nativeSrc": "8220:30:5",
															"nodeType": "YulAssignment",
															"src": "8220:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:5"
																},
																"nativeSrc": "8234:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:5"
																}
															]
														},
														{
															"nativeSrc": "8263:23:5",
															"nodeType": "YulAssignment",
															"src": "8263:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:5"
																},
																"nativeSrc": "8278:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:5",
														"valueSize": 1
													},
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:5",
														"valueSize": 1
													},
													{
														"declaration": 653,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:5",
														"valueSize": 1
													},
													{
														"declaration": 656,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:5",
														"valueSize": 1
													},
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 658,
												"nodeType": "InlineAssembly",
												"src": "7875:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 659,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "8310:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 670,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "8362:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 664,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "8336:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 662,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "8306:146:5",
												"trueBody": {
													"id": 681,
													"nodeType": "Block",
													"src": "8380:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 677,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "8434:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 675,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 674,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "8401:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 680,
															"nodeType": "RevertStatement",
															"src": "8394:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 645,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "7767:6:5"
													},
													"referencedDeclaration": 315,
													"src": "7767:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7781:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:5"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:5"
									},
									"scope": 726,
									"src": "7738:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "9049:391:5",
										"statements": [
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9059:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 695,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:5"
											},
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9081:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 698,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:5"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9109:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:5",
													"nodeType": "YulBlock",
													"src": "9163:174:5",
													"statements": [
														{
															"nativeSrc": "9177:71:5",
															"nodeType": "YulAssignment",
															"src": "9177:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:5"
																		},
																		"nativeSrc": "9193:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:5"
																		},
																		"nativeSrc": "9210:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:5"
																		},
																		"nativeSrc": "9227:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:5"
																},
																"nativeSrc": "9188:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:5"
																}
															]
														},
														{
															"nativeSrc": "9261:30:5",
															"nodeType": "YulAssignment",
															"src": "9261:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:5"
																},
																"nativeSrc": "9275:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:5"
																}
															]
														},
														{
															"nativeSrc": "9304:23:5",
															"nodeType": "YulAssignment",
															"src": "9304:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:5"
																},
																"nativeSrc": "9319:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:5",
														"valueSize": 1
													},
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:5",
														"valueSize": 1
													},
													{
														"declaration": 699,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:5",
														"valueSize": 1
													},
													{
														"declaration": 696,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:5",
														"valueSize": 1
													},
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 704,
												"nodeType": "InlineAssembly",
												"src": "9138:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 705,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "9353:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 706,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "9365:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 717,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "9416:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 711,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "9391:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 709,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 721,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 694,
												"id": 723,
												"nodeType": "Return",
												"src": "9346:87:5"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8993:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 686,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8993:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8993:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "9007:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:5"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "9043:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:5"
									},
									"scope": 726,
									"src": "8960:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 727,
							"src": "750:8692:5",
							"usedErrors": [
								329,
								338
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"Errors": [
							1037
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 728,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1038,
							"src": "127:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 729,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1037,
										"src": "135:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "Address",
							"nameLocation": "241:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 736,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "358:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:6"
									},
									"src": "335:39:6"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "1361:278:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 746,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 749,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1399:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "1371:125:6",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "1407:89:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 756,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				],
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 754,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 759,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "1478:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 751,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "1428:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "1428:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 761,
															"nodeType": "RevertStatement",
															"src": "1421:64:6"
														}
													]
												}
											},
											{
												"assignments": [
													765,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "1507:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 764,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 766,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "1525:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 768,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "1547:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:6"
											},
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:6",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1573:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "1568:65:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "1582:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 775,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "1603:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1028,
																	"src": "1603:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "1596:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1309:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1336:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:6"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:6"
									},
									"scope": 985,
									"src": "1290:349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "2573:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2612:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2620:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 793,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "2590:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 792,
												"id": 798,
												"nodeType": "Return",
												"src": "2583:45:6"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2506:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2522:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2559:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 790,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:6"
									},
									"scope": 985,
									"src": "2484:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "3072:294:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 814,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 817,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "3110:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "3082:123:6",
												"trueBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "3117:88:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 824,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				],
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 822,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 827,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "3188:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 819,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "3138:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "3138:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 829,
															"nodeType": "RevertStatement",
															"src": "3131:63:6"
														}
													]
												}
											},
											{
												"assignments": [
													833,
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "3215:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 832,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "3229:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 834,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"id": 840,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3282:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 836,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "3256:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 838,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "3275:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3331:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3339:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 846,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3348:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 843,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3304:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 811,
												"id": 848,
												"nodeType": "Return",
												"src": "3297:62:6"
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2990:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3006:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3025:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:6"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3058:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:6"
									},
									"scope": 985,
									"src": "2959:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "3605:154:6",
										"statements": [
											{
												"assignments": [
													861,
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "3616:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 860,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "3630:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"arguments": [
														{
															"id": 866,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3675:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 864,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3657:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3724:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3732:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 872,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3741:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 869,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3697:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 859,
												"id": 874,
												"nodeType": "Return",
												"src": "3690:62:6"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3533:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3549:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3591:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:6"
									},
									"scope": 985,
									"src": "3505:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "3997:156:6",
										"statements": [
											{
												"assignments": [
													887,
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4008:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 886,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4022:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 888,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"arguments": [
														{
															"id": 892,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4069:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 890,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4049:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4118:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4126:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 898,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4135:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 895,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "4091:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 885,
												"id": 900,
												"nodeType": "Return",
												"src": "4084:62:6"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3930:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3946:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:6"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3983:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:6"
									},
									"scope": 985,
									"src": "3900:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "4579:424:6",
										"statements": [
											{
												"condition": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:6",
													"subExpression": {
														"id": 914,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4594:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "4653:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 921,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "4841:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 925,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "4867:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 936,
															"nodeType": "IfStatement",
															"src": "4837:119:6",
															"trueBody": {
																"id": 935,
																"nodeType": "Block",
																"src": "4892:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 932,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "4934:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 931,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "4917:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 934,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 937,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4976:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 913,
															"id": 938,
															"nodeType": "Return",
															"src": "4969:17:6"
														}
													]
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "4589:408:6",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "4603:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 917,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "4625:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 916,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "4617:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4466:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4490:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4512:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4565:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:6"
									},
									"scope": 985,
									"src": "4421:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "5307:122:6",
										"statements": [
											{
												"condition": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:6",
													"subExpression": {
														"id": 952,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5322:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "5381:42:6",
													"statements": [
														{
															"expression": {
																"id": 959,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "5402:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 951,
															"id": 960,
															"nodeType": "Return",
															"src": "5395:17:6"
														}
													]
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "5317:106:6",
												"trueBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "5331:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 955,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "5353:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 954,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "5345:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5231:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5245:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 946,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:6"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5293:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:6"
									},
									"scope": 985,
									"src": "5205:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "5598:432:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 970,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "5674:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "5973:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 976,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "5994:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1028,
																	"src": "5994:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "5987:26:6"
														}
													]
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "5670:354:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "5697:270:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:6",
																"nodeType": "YulBlock",
																"src": "5824:133:6",
																"statements": [
																	{
																		"nativeSrc": "5842:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:6"
																			},
																			"nativeSrc": "5865:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:6",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:6",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:6"
																					},
																					"nativeSrc": "5906:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:6"
																			},
																			"nativeSrc": "5899:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:6"
																		},
																		"nativeSrc": "5899:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:6"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 967,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 967,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:6",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 974,
															"nodeType": "InlineAssembly",
															"src": "5799:158:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5560:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:6"
									},
									"scope": 985,
									"src": "5543:487:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 986,
							"src": "233:5799:6",
							"usedErrors": [
								736
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1015
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 988,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 993,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 992,
												"id": 995,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1015,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1004,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1015,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1010,
												"id": 1012,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1015,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1016,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1037
						]
					},
					"id": 1038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:8",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "Errors",
							"nameLocation": "419:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1025,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "557:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "574:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:8"
									},
									"src": "531:59:8"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1028,
									"name": "FailedCall",
									"nameLocation": "696:10:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:8"
									},
									"src": "690:19:8"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:8",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1031,
									"name": "FailedDeployment",
									"nameLocation": "772:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:8"
									},
									"src": "766:25:8"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:8",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1036,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "884:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:8"
									},
									"src": "860:33:8"
								}
							],
							"scope": 1038,
							"src": "411:484:8",
							"usedErrors": [
								1025,
								1028,
								1031,
								1036
							],
							"usedEvents": []
						}
					],
					"src": "100:796:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1049
						]
					},
					"id": 1050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1040,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1049,
							"linearizedBaseContracts": [
								1049
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1049,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"contracts/GameContract.sol": {
				"ast": {
					"absolutePath": "contracts/GameContract.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"Context": [
							1015
						],
						"GameContract": [
							1304
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							726
						]
					},
					"id": 1305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1051,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1305,
							"sourceUnit": 148,
							"src": "57:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1305,
							"sourceUnit": 316,
							"src": "110:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1305,
							"sourceUnit": 727,
							"src": "167:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"hexValue": "307835304444353431616435343064303436453538323261314435343430303630443538373736654136",
											"id": 1056,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:42:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"value": "0x50DD541ad540d046E5822a1D5440060D58776eA6"
										}
									],
									"baseName": {
										"id": 1055,
										"name": "Ownable",
										"nameLocations": [
											"259:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "259:7:10"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "259:51:10"
								}
							],
							"canonicalName": "GameContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1304,
							"linearizedBaseContracts": [
								1304,
								147,
								1015
							],
							"name": "GameContract",
							"nameLocation": "243:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1061,
									"libraryName": {
										"id": 1058,
										"name": "SafeERC20",
										"nameLocations": [
											"323:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 726,
										"src": "323:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "317:27:10",
									"typeName": {
										"id": 1060,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1059,
											"name": "IERC20",
											"nameLocations": [
												"337:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "337:6:10"
										},
										"referencedDeclaration": 315,
										"src": "337:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "1e1a6e6e",
									"id": 1064,
									"mutability": "mutable",
									"name": "cz4Token",
									"nameLocation": "524:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1304,
									"src": "510:22:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1063,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1062,
											"name": "IERC20",
											"nameLocations": [
												"510:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "510:6:10"
										},
										"referencedDeclaration": 315,
										"src": "510:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44a88070",
									"id": 1067,
									"mutability": "mutable",
									"name": "fasuToken",
									"nameLocation": "553:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1304,
									"src": "539:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1066,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1065,
											"name": "IERC20",
											"nameLocations": [
												"539:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "539:6:10"
										},
										"referencedDeclaration": 315,
										"src": "539:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "785fa627",
									"id": 1069,
									"mutability": "mutable",
									"name": "prizeAmount",
									"nameLocation": "613:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1304,
									"src": "601:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1068,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "601:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "7e4809669d29d4f60fc52cdc899ff62c77b16c6a3893532c483386afa590a271",
									"id": 1073,
									"name": "PrizeAdded",
									"nameLocation": "650:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "666:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "661:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "661:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:13:10"
									},
									"src": "644:30:10"
								},
								{
									"anonymous": false,
									"eventSelector": "6dd63c9a34674245c3658d149ff4d640423eb11008c777a57783c3237d96ffcf",
									"id": 1081,
									"name": "FASUDeposited",
									"nameLocation": "685:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "715:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "699:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"indexed": false,
												"mutability": "mutable",
												"name": "fasuAmount",
												"nameLocation": "726:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "721:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "721:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"indexed": false,
												"mutability": "mutable",
												"name": "cz4Reward",
												"nameLocation": "743:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "738:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "738:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:55:10"
									},
									"src": "679:75:10"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "830:99:10",
										"statements": [
											{
												"expression": {
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1088,
														"name": "cz4Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "840:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1090,
																"name": "_cz4TokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "858:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1089,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "851:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "851:24:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "840:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "840:35:10"
											},
											{
												"expression": {
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1094,
														"name": "fasuToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "885:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1096,
																"name": "_fasuTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "904:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1095,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "897:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "897:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "885:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "885:37:10"
											}
										]
									},
									"id": 1101,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "_cz4TokenAddress",
												"nameLocation": "780:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "772:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "_fasuTokenAddress",
												"nameLocation": "806:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "798:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:53:10"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:0:10"
									},
									"scope": 1304,
									"src": "760:169:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "1035:213:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "1053:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1062:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1053:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072697a6520616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1065:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f",
																"typeString": "literal_string \"Prize amount must be greater than zero\""
															},
															"value": "Prize amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d32118f5401b0010505ff671a74c05c6b047874b428ba3dcc93a1e4a7428c3f",
																"typeString": "literal_string \"Prize amount must be greater than zero\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1045:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1045:61:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "1045:61:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1118,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1142:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1146:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1142:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1122,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1162:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																],
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1154:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1120,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1154:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1154:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1169:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1115,
															"name": "cz4Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1116:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1125:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 389,
														"src": "1116:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "1116:60:10"
											},
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1127,
														"name": "prizeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "1186:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1128,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "1201:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1186:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "1186:21:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1234:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1131,
														"name": "PrizeAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "1223:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "1218:23:10"
											}
										]
									},
									"functionSelector": "2a050024",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"1025:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1025:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1025:9:10"
										}
									],
									"name": "addPrize",
									"nameLocation": "994:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1008:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1003:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1003:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:13:10"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1035:0:10"
									},
									"scope": 1304,
									"src": "985:263:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "1302:682:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1142,
																"name": "fasuAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "1361:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1374:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1361:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1377:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																"typeString": "literal_string \"Deposit amount must be greater than zero\""
															},
															"value": "Deposit amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																"typeString": "literal_string \"Deposit amount must be greater than zero\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1353:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "1353:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1149,
																"name": "prizeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1438:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1452:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1438:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072697a6520706f6f6c20697320656d707479",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1455:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9",
																"typeString": "literal_string \"Prize pool is empty\""
															},
															"value": "Prize pool is empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a7374ffc90b873f30a90c7d1ac6dec15406f797fa6efbdbfc1c1b9dac9c73a9",
																"typeString": "literal_string \"Prize pool is empty\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1430:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "1430:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1158,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1515:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1519:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1515:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1162,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1535:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1527:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1527:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1527:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1164,
															"name": "fasuAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1542:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1155,
															"name": "fasuToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1488:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1498:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 389,
														"src": "1488:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1488:65:10"
											},
											{
												"assignments": [
													1168
												],
												"declarations": [
													{
														"constant": false,
														"id": 1168,
														"mutability": "mutable",
														"name": "randomFactor",
														"nameLocation": "1577:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "1572:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1167,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1572:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 1174,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "1625:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1175,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1631:9:10",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "1625:15:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"expression": {
																								"id": 1176,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "1642:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1177,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1648:10:10",
																							"memberName": "prevrandao",
																							"nodeType": "MemberAccess",
																							"src": "1642:16:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"expression": {
																								"id": 1178,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "1660:3:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1179,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1664:6:10",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "1660:10:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"expression": {
																							"id": 1172,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "1608:3:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 1173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "1612:12:10",
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"src": "1608:16:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 1180,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1608:63:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1171,
																				"name": "keccak256",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967288,
																				"src": "1598:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																					"typeString": "function (bytes memory) pure returns (bytes32)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1598:74:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1593:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1169,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1593:4:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1593:80:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1676:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "1593:84:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1185,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1592:86:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1681:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1592:90:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1572:110:10"
											},
											{
												"assignments": [
													1190
												],
												"declarations": [
													{
														"constant": false,
														"id": 1190,
														"mutability": "mutable",
														"name": "cz4Reward",
														"nameLocation": "1697:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1224,
														"src": "1692:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1189,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1692:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1191,
																	"name": "fasuAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "1710:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "315f3030305f303030",
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1723:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000_by_1",
																		"typeString": "int_const 1000000"
																	},
																	"value": "1_000_000"
																},
																"src": "1710:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1194,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1709:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1195,
														"name": "randomFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "1736:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1709:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1692:56:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1199,
																"name": "cz4Reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1190,
																"src": "1767:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1200,
																"name": "prizeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1780:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1767:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820435a3420696e207072697a6520706f6f6c",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1793:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca",
																"typeString": "literal_string \"Not enough CZ4 in prize pool\""
															},
															"value": "Not enough CZ4 in prize pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_26116c5ef36f2d6944d70ca7fa36007c50a35a077e5c6b8cb5ab3078409840ca",
																"typeString": "literal_string \"Not enough CZ4 in prize pool\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1759:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1759:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "1759:65:10"
											},
											{
												"expression": {
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1205,
														"name": "prizeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "1834:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1206,
														"name": "cz4Reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "1849:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1834:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "1834:24:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1891:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1895:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1891:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "cz4Reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "1903:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1209,
															"name": "cz4Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1869:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1878:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 362,
														"src": "1869:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "1869:44:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1218,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1943:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1947:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1943:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "fasuAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "1955:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1221,
															"name": "cz4Reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "1967:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1217,
														"name": "FASUDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "1929:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "EmitStatement",
												"src": "1924:53:10"
											}
										]
									},
									"functionSelector": "79d4964f",
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositFASU",
									"nameLocation": "1264:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "fasuAmount",
												"nameLocation": "1281:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "1276:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1276:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:17:10"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1302:0:10"
									},
									"scope": 1304,
									"src": "1255:729:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "2095:574:10",
										"statements": [
											{
												"assignments": [
													1231
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "ethBalance",
														"nameLocation": "2110:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1298,
														"src": "2105:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1230,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2105:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1237,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1234,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "2131:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_GameContract_$1304",
																	"typeString": "contract GameContract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_GameContract_$1304",
																	"typeString": "contract GameContract"
																}
															],
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2123:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1232,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2123:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2123:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2137:7:10",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "2123:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:39:10"
											},
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "cz4Balance",
														"nameLocation": "2159:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1298,
														"src": "2154:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1238,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2154:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1247,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1244,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2199:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																],
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2191:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1242,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2191:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2191:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1240,
															"name": "cz4Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "2172:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2181:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "2172:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2154:51:10"
											},
											{
												"assignments": [
													1249
												],
												"declarations": [
													{
														"constant": false,
														"id": 1249,
														"mutability": "mutable",
														"name": "fasuBalance",
														"nameLocation": "2220:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1298,
														"src": "2215:16:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1248,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2215:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1254,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2262:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_GameContract_$1304",
																		"typeString": "contract GameContract"
																	}
																],
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2254:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1252,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2254:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2254:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1250,
															"name": "fasuToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2234:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2244:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "2234:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2215:53:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1258,
														"name": "ethBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "2313:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2326:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2313:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "IfStatement",
												"src": "2309:82:10",
												"trueBody": {
													"id": 1270,
													"nodeType": "Block",
													"src": "2329:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1267,
																		"name": "ethBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "2369:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1263,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "2351:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2351:7:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2343:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1261,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2343:8:10",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2343:16:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2360:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2343:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2343:37:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1269,
															"nodeType": "ExpressionStatement",
															"src": "2343:37:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1272,
														"name": "cz4Balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "2442:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2455:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2442:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "2438:87:10",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "2458:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1278,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "2494:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2494:7:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1280,
																		"name": "cz4Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "2503:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1275,
																		"name": "cz4Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "2472:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2481:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 362,
																	"src": "2472:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2472:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1282,
															"nodeType": "ExpressionStatement",
															"src": "2472:42:10"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "fasuBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "2577:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2591:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2577:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1297,
												"nodeType": "IfStatement",
												"src": "2573:90:10",
												"trueBody": {
													"id": 1296,
													"nodeType": "Block",
													"src": "2594:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1291,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "2631:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2631:7:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1293,
																		"name": "fasuBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "2640:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1288,
																		"name": "fasuToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "2608:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2618:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 362,
																	"src": "2608:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2608:44:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1295,
															"nodeType": "ExpressionStatement",
															"src": "2608:44:10"
														}
													]
												}
											}
										]
									},
									"functionSelector": "24600fc3",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1227,
												"name": "onlyOwner",
												"nameLocations": [
													"2085:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2085:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2085:9:10"
										}
									],
									"name": "withdrawFunds",
									"nameLocation": "2060:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:10"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:0:10"
									},
									"scope": 1304,
									"src": "2051:618:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2738:2:10",
										"statements": []
									},
									"id": 1303,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:2:10"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2738:0:10"
									},
									"scope": 1304,
									"src": "2711:29:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1305,
							"src": "234:2508:10",
							"usedErrors": [
								13,
								18,
								329
							],
							"usedEvents": [
								24,
								1073,
								1081
							]
						}
					],
					"src": "32:2711:10"
				},
				"id": 10
			}
		}
	}
}